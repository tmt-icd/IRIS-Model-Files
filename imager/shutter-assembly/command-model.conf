subsystem = IRIS
component = imager.shutter

receive = [
    {
        name = init
        description = """
Initializes this assembly and reloads the configuration files. It does not initialize the underlying HCDs, clear the datum, or trigger any motion, but it stops the ongoing motion and deenergizes the motor.
"""
        completionType = longRunning
    }
    {
        name = datum
        description = "Start datuming of the shutter mechanism."
        completionType = longRunning
        preconditions  = [
                          "state.enabled == true &&",
                          "state.temperature != HIGH &&",
                          "state.temperature != UNKNOWN"
                         ]
        postconditions = [
                          "state.selection == CLOSED",
                          "state.move == false",
                          "state.power == false"
                         ]
    }
    {
        name = select
        description = "This command open or close the shutter. If 'time' is specified, this assembly delays the beginning of the motion so that it completes the motion at the specified time. If not, this command immediately starts the motion."
        requiredArgs = [target]
        args = [
            {
                name = target
                description = "Target position of the shutter."
                enum = [OPEN, CLOSE]
            }
            {
                name = time
                description = "Time to complete the motion."
                type = taiDate
            }
        ]
        completionType = longRunning
        preconditions  = [
                          "state.enabled == true &&",
                          "state.error == false &&",
                          "state.selection != UNKNOWN &&"
                          "state.temperature != HIGH &&",
                          "state.temperature != UNKNOWN"
                         ]
        postconditions = [
                          "(state.selection == CLOSED || state.selection == OPEN) &&",
                          "state.onTarget == true &&",
                          "state.move == false &&",
                          "state.power == false"
                         ]
    }
    {
        name = move
        description = "This command moves the shutter to an arbitrary position."
        requiredArgs = [target]
        args = [
            {
                name = target
                description = "Target position."
                type = double
                units = step
            }
            {
                name = relative
                description = "if true, the target position is considered as the position relative to the current position"
                type = boolean
                default = false
            }
            {
                name = velocity
                description = "Motion velocity."
                type = double
                units = step/s
                exclusiveMinimum = 0
                default = RawMotionVelocity
            }
            {
                name = acceleration
                description = "Motion acceleration."
                type = double
                units = step/s<sup>2</sup>
                exclusiveMinimum = 0
                default = RawMotionAcceleration
            }
            {
                name = minimumJerkTime
                description = "Minimum jerk time."
                type = double
                units = s
                default = RawMotionMinJerkTime
            }
            {
                name = maximumJerkTime
                description = "Maximum jerk time."
                type = double
                units = s
                default = RawMotionMaxJerkTime
            }
        ]        
        completionType = longRunning
        role = "eng"
        preconditions  = [
                          "state.enabled == true &&",
                          "state.selection != UNKNOWN &&"
                          "state.temperature != HIGH &&",
                          "state.temperature != UNKNOWN"
                         ]
        postconditions = [
                          "state.move == false &&",
                          "state.power == false"
                         ]
    }
    {
        name = disable
        description = """
This command disables this assembly. Any commands that trigger a motion or turn on the motor current will be rejected when disabled.

This command is expected to be called before starting the cool-down or warm-up procedure.
"""
        completionType = immediate
        preconditions  = [
                          "state.move == false",
                          "state.power == false",
                          "state.enabled == true"
                         ]
        postconditions = ["state.enabled == false"]
    }
    {
        name = enable
        description = """
This command enables this assembly.

This command is expected to be called after the cool-down or warm-up procedure is completed.
"""
        completionType = immediate
        preconditions  = ["state.enabled == false"]
        postconditions = ["state.enabled == true"]
    }
    {
        name = park
        description = "This command closes the shutter. Equivalent to calling 'select' command with 'target = CLOSE' argument."
        completionType = longRunning
        preconditions  = [
                          "state.enabled == true &&",
                          "state.error == false &&",
                          "state.selection != UNKNOWN &&"
                          "state.temperature != HIGH &&",
                          "state.temperature != UNKNOWN"
                         ]
        postconditions = [
                          "state.selection == CLOSED &&",
                          "state.onTarget == true &&",
                          "state.move == false &&",
                          "state.power == false"
                         ]
    }
    {
        name = stop
        description = "Stop the motion of the shutter mechanism and turn off the motor power."
        completionType = longRunning
        postconditions = [
                          "state.move == false &&",
                          "state.power == false"
                         ]
    }
    {
        name = test
        description = "This command executes a self-test. Actual action to be taken is TBD. This command never drives the shutter mechanism."
        completionType = immediate
        role = "eng"
    }
    {
        name = debug
        description = "Set the debug level."
        completionType = immediate
        role = "eng"
    }
    {
        name = setTemperatureThreshold
        description = "Change the overheat protection temperature threshold."
        completionType = immediate
        args = [
            {
                name = threshold
                description = "New threshold."
                type = float
                units = K
            }
        ]
        role = "eng"
    }
    {
        name = shutdown
        description = "Shutdown this assembly. It does not send this command down to the underlying HCD(s). The on-going motion may continue after shutdown."
        completionType = immediate
    }
]
