subsystem = IRIS
component = imager.detector

receive = [
  {
    name = init
    description = """
Initializes this assembly and reloads the configuration files. It does not intialize the underlying HCDs, trigger any exposure or initiate any action on the hardware.

Preemptable: no
"""
    completionType = longRunning
  }
  {
    name           = test
    description    = """
This command executes a self-test. Action to be taken is TBD.

This command never starts an exposure nor reset the detectors.
"""
    completionType = immediate
    role           = "eng"
  }
  {
    name = loadConfiguration
    description = """
This command validates the given exposure configuration and saves it internally in this Assembly, the underlying Detector HCDs and/or the detector controllers. The next exposure will be executed with the specified configuration.

Preemptable: TBD
"""
    completionType = longRunning
    preconditions  = ["irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false"]
    postconditions = ["irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    args = [
      {
        name        = readouts
        description = "Number of full frame readouts per ramp."
        type        = integer
        minimum     = 2
        default     = 2
      }
      {
        name        = ramps
        description = "Number of ramps for the full frame in one exposure."
        type        = integer
        minimum     = 1
        default     = 1
      }
      {
        name        = sampling
        description = "Sampling method for the full frame"
        enum        = [MCDS, UTR]
        default     = UTR
      }
      {
        name        = coadd
        description = "Number of coadds for MCDS for the full frame. If it is one, the sampling mode is effectively the same as CDS."
        type        = integer
        minimum     = 1
        default     = 1
      }
      {
        name        = subarrayDetector1
        description = """
Subarray configuration for the detector #1. One element for one subarray. No overlap is allowed among subarrays. This parameter is not allowed if the subjected detector is in the ODGW mode.

TODO: determine how to specify the reset and readout interval of each subarray.
"""
        type        = array
        minItems    = 0
        maxItems    = 99
        items       = {
          type = struct
          parameters = [
            {
              name        = x
              description = "X location of the subarray."
              units       = pixel
              type        = integer
              minimum     = 0
              maximum     = 4095
            }
            {
              name        = y
              description = "Y location of the subarray."
              units       = pixel
              type        = integer
              minimum     = 0
              maximum     = 4095
            }
            {
              name        = size
              description = "Size (width and height) of the subarray."
              units       = pixel
              type        = integer
              minimum     = 4
              maximum     = 256
            }
            {
              name        = sampling
              description = "Sampling method for this subarray."
              enum        = [MCDS, UTR]
              default     = UTR
            }
            {
              name        = coadd
              description = "Number of coadds for MCDS for this subarray. If it is one, the sampling mode is effectively the same as CDS."
              type        = integer
              minimum     = 1
              default     = 1
            }
          ]
        }
      }
      {
        name        = subarrayDetector2
        description = "Subarray configuration for the detector #2."
        ref = subarrayDetector1
      }
      {
        name        = subarrayDetector3
        description = "Subarray configuration for the detector #3."
        ref = subarrayDetector1
      }
      {
        name        = subarrayDetector4
        description = "Subarray configuration for the detector #4."
        ref = subarrayDetector1
      }
    ]
  }
  {
    name = exposure
    description = """
This command starts a new science exposure with the pre-loaded configuration. This command is considered successfully completed when the specified exposure time has been elapsed without any error.

Preemptable: yes
"""
    completionType = longRunning
    preconditions  = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    postconditions = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    args            = [
      {
        name        = obsId
        description = "Observation ID. If not given, the exposure ID is replaced by the UTC time."
        type        = string
      }
      {
        name        = exposureNumber
        description = "Exposure number."
        type        = integer
        minimum     = 1
        maximum     = 9999
        default     = 1
      }
    ]
  }
  {
    name = abortExposure
    description = """Cancels the science exposure in progress. This does not stop the ongoing continuous ODGW exposure.

Preemptable: no
"""
    completionType = longRunning
  }
  {
    name = datum
    description = "TBD"
    completionType = immediate
  }
  {
    name = park
    description = "TBD"
    completionType = immediate
  }
  {
    name = disable
    description = """
This command disables this assembly. Any commands that triggers a new exposure will be rejected when disabled.

This command is expected to be called before starting the cool-down or warm-up procedure.
"""
    completionType = immediate
    preconditions  = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == true"]
    postconditions = ["state.enabled == false"]
  }
  {
    name = enable
    description = """
This command enables this assembly.

This command is expected to be called after the cool-down or warm-up procedure is completed.
"""
    completionType = immediate
    preconditions  = ["state.enabled == false"]
    postconditions = ["state.enabled == true"]
  }
  {
    name           = debug
    description = "Set the debug level."
    completionType = immediate
    role           = "eng"
  }
  {
    name = shutdown
    description = "Shutdown this assembly. It does not send this command down to the underlying HCDs. The ongoing exposure may continue after shutdown."
    completionType = immediate
  }
]
