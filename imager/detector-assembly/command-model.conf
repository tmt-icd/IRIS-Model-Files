subsystem = IRIS
component = imager.detector

receive = [
  {
    name = init
    description = """
Initializes this assembly and reloads the configuration files. It does not intialize the underlying HCDs, trigger any exposure or initiate any action on the hardware.
"""
    completionType = longRunning
  }
  {
    name           = test
    description    = """
This command executes a self-test. Action to be taken is TBD.

This command never starts an exposure nor reset the detectors.
"""
    completionType = immediate
    role           = "eng"
  }
  {
    name = loadConfiguration
    description = """
This command validates the given specified exposure configuration and saves them internally in this Assembly, the underlying Detector HCD and/or the detector controllers so that the next exposure will be performed with the specified configuration.
"""
    completionType = longRunning
    preconditions  = ["irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false"]
    postconditions = ["irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    args = [
      {
        name        = readouts
        description = "Number of full frame readouts per ramp."
        type        = integer
        minimum     = 2
        default     = 2
      }
      {
        name        = ramps
        description = "Number of ramps for the full frame in one exposure."
        type        = integer
        minimum     = 1
        default     = 1
      }
      {
        name        = sampling
        description = "Sampling method for the full frame"
        enum        = [MCDS, UTR]
        default     = UTR
      }
      {
        name        = coadd
        description = "Number of coadds for MCDS for the full frame. If it is one, the sampling mode is effectively the same as CDS."
        type        = integer
        minimum     = 1
        default     = 1
      }
    ]
  }
  {
    name = exposure
    description = """
This command starts a new science exposure with the pre-loaded configuration. This command is considered successfully completed when the specified exposure time has been elapsed without any error.
"""
    completionType = longRunning
    preconditions  = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    postconditions = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == false &&",
                      "irDetectorExposureState.abortInProgress == false &&",
                      "irDetectorExposureState.operationalState == READY"]
    args            = [
      {
        name        = obsId
        description = "Observation ID. If not given, the exposure ID is replaced by the UTC time."
        type        = string
      }
      {
        name        = exposureNumber
        description = "Exposure number."
        type        = integer
        minimum     = 1
        maximum     = 9999
        default     = 1
      }
    ]
  }
  {
    name = abortExposure
    description = "Cancels the science exposure in progress. This does not stop the ongoing continuous ODGW exposure."
    completionType = longRunning
  }
  {
    name = datum
    description = "TBD"
    completionType = immediate
  }
  {
    name = park
    description = "TBD"
    completionType = immediate
  }
  {
    name = disable
    description = """
This command disables this assembly. Any commands that triggers a new exposure will be rejected when disabled.

This command is expected to be called before starting the cool-down or warm-up procedure.
"""
    completionType = immediate
    preconditions  = ["state.enabled == true &&",
                      "irDetectorExposureState.exposureInProgress == true"]
    postconditions = ["state.enabled == false"]
  }
  {
    name = enable
    description = """
This command enables this assembly.

This command is expected to be called after the cool-down or warm-up procedure is completed.
"""
    completionType = immediate
    preconditions  = ["state.enabled == false"]
    postconditions = ["state.enabled == true"]
  }
  {
    name           = debug
    description = "Set the debug level."
    completionType = immediate
    role           = "eng"
  }
  {
    name = shutdown
    description = "Shutdown this assembly. It does not send this command down to the underlying HCDs. The ongoing exposure may continue after shutdown."
    completionType = immediate
  }
]
