subsystem = IRIS
component = imager.detector

publish {
  events = [
    {
      name = state
      description = "State of this assembly."
      archive = true
      attributes = [
        {
          name = cmd
          description  = "command state"
          enum = [UNINITIALIZED, READY, BUSY]
        }
        {
          name = debug
          description  = "debug level"
          enum = [DEBUG, INFO, WARN, ERROR]
        }
        {
          name = enabled
          description = "indicates whether this assembly is enabled"
          type = boolean
        }
        {
          name = interlock
          description = "Indicates whether the exposure is prohibited due to the interlock signal from Safety HCD."
          type = boolean
        }
        {
          name = use
          description = "Indicates which detector to use. The detector not in use will be ignored. This status is updated only when (re)initialized."
          type = array
          dimensions = [4]
          items = {
            type = boolean
          }
        }
        {
          name = error
          description  = "Indicates if unrecoverable error occured. Need to reboot this assembly and most probably underlying HCDs to recover from the error."
          type = boolean
        }
      ]
    }
    {
      name = cmdStatus
      description = "Standard command status of this assembly"
      archive = true
      ref = imager.shutter/events/cmdStatus
    }
  ]
  
  observeEvents = [
    {
      name = exposureStart
      description = "This Observe Event indicates the science exposure is about to start."
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = exposureEnd
      description = """This Observe Event indicates the end of the science exposure. Once this event is received, DMS can stop collecting metadata and OCS can start another exposure.

Note that the underlying HCDs (or their child processes) may be still writing the raw science frames to DRS when this event is issued.
"""
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = exposureAborted
      description = "This Observe Event indicates that the science exposure has been aborted due to an observer request or some technical issue."
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = reason
          description = "The reason why this exposure was aborted."
          type = string
        }
      ]
    }
    {
      name = irDetectorExposureState
      description = """
      This is a standardized IR detector state Observe Event.
      The irDetectorExposureState is provided as a state variable to indicate the current state of the detector system.
      The irDetectorExposureState groups parameters that change relatively slowly, and this event will be published whenever any of its parameters changes.
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector description from which the readout is generated. This is always IRIS-IMG."
          type = string
        }
        {
          name = exposureInProgress
          description = """
            A boolean indictating if detector system is acquiring an exposure.
            It is delimited by exposureStart and exposureEnd Observe Events.
            exposureInProgress should be false if abortInProgress is true (TBD).
          """
          type = boolean
        }
        {
          name = abortInProgress
          description = """
            A boolean indictating if an abort has been requested and is underway
          """
          type = boolean
        }
        {
          name = isAborted
          description = """
            A boolean indictating if an abort has occurred and is completed.
            abortInProgress will be false when isAborted is true.
            isAborted will be set to false with the start of the next exposure
          """
          type = boolean
        }
        {
          name = operationalState
          description = """
          An enumeration that indicates if the detector system is available and operational with values: READY, BUSY, ERROR.
            *Allowable Values*
            <ul>
            <li>READY - indicates the system can execute exposures.
            <li>BUSY  - indicates system is BUSY with the most likely reason being it is acquiring data
            <li>ERROR - indicates the detector system is in an error state. This could happen as a result of a command or due to a spontaneous failure. Corrective action is required. The operationalState is reset to READY if the failure is cleared or to BUSY when the next exposure is started.
            </ul>
          """
          enum = [ READY | BUSY | ERROR ]
        }
        {
          name = errorMessage
          description = """
            An optional parameter that can be included when the detector system is in the ERROR operationalState to help understand the error state.
            This value should be cleared and removed from the state when the operationalState returns to READY.
          """
          type = string
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = irDetectorExposureData
      description = """
        This is a standardized IR detector state Observe Event.
        The irDetectorExposureData event contains fast-changing data about the internals of the current exposure.
        This data is useful for user interfaces and Sequencers. This event will be published at the full frame readout rate during an ongoing exposure.
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector description from which the readout is generated. This is always IRIS-IMG."
          type = string
        }
        {
          name = readsInRamp
          description = """
            The integer total number of reads in the ramp. Value should be constant during an exposure..
          """
          type = integer
          minimum = 2
          maximum = 99999
        }
        {
          name = readsComplete
          description = """
            Integer number of currently completed reads from 1 to readsInRamp.
            Will be reset to 0 at the start of every ramp.
          """
          type = integer
          minimum = 0
          maximum = 99999
        }
        {
          name = rampsInExposure
          description = """
            The integer total number of ramps in the current exposure. Value should be constant during an exposure.
          """
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = rampsComplete
          description = """
            Integer number of completed ramps from 1 to rampsInExposure.
            Will be reset to 0 at the start of every exposure.
          """
          type = integer
          minimum = 0
          maximum = 99999
        }
        {
          name = exposureTime
          description = "Length (as a float) in seconds of the current exposure.  For example: 1.25"
          type = float
          units = s
          exclusiveMinimum = 0
        }
        {
          name = remainingExposureTime
          description = """
            Number (as a float) of seconds remaining in the current exposure.  For example: 1.25.
            Should count down in integer seconds -- no faster than 1 Hz.
          """
          type = float
          units = s
          minimum = 0
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
  ]
  
  alarms = [
    {
      name             = watchdog
      description      = "This assembly has become unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Imager Detector Assembly (IRIS.imager.detector)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = readoutFailure
      description      = "One of the readout couldn't be acquired or saved successfully."
      severityLevels   = [Warning, Major]
      location         = "IRIS Imager Detector Assembly (IRIS.imager.detector)"
      alarmType        = System
      probableCause    = "Connection loss with Hawaii HCD, hawaii-cproc or the detector controller."
      operatorResponse = "Investigate the reason. Abort the ongoing science exposure or continue if this is considered not critical."
      autoAck          = false
      latched          = true
    }
    {
      name             = detectorFailure
      description      = "One of the four detectors is interrupted in the middle of the science exposure."
      severityLevels   = [Major]
      location         = "IRIS Imager Detector Assembly (IRIS.imager.detector)"
      alarmType        = System
      probableCause    = "Error in the detector controller hardware."
      operatorResponse = "Investigate the reason. Abort the ongoing science exposure or continue if this is considered not critical."
      autoAck          = false
      latched          = true
    }
    {
      name             = unrecoverableFailure
      description      = "One of the four detectors did not respond as expected and the error cannot be recovered."
      severityLevels   = [Critical]
      location         = "IRIS Imager Detector Assembly (IRIS.imager.detector)"
      alarmType        = System
      probableCause    = "Software bug."
      operatorResponse = "Reboot the underlying Hawaii HCDs and this assembly."
      autoAck          = false
      latched          = true
    }
  ]
}
