subsystem = IRIS
component = imager.pupilview

publish {
  events = [
    {
      name = DETECTOR-state
      description = "State of the DETECTOR functional group."
      archive = true
      attributes = [
        {
          name = cmd
          description  = "command state"
          enum = [UNINITIALIZED, READY, BUSY]
        }
        {
          name = debug
          description  = "debug level"
          enum = [DEBUG, INFO, WARN, ERROR]
        }
        {
          name = enabled
          description = "indicates whether this functional group is enabled"
          type = boolean
        }
        {
          name = interlock
          description = "Indicates whether the exposure is prohibited due to the interlock signal from Safety HCD."
          type = boolean
        }
        {
          name = error
          description  = "Indicates if unrecoverable error occured. Need to reboot this assembly and most probably underlying HCDs to recover from the error."
          type = boolean
        }
      ]
    }
    {
      name = DETECTOR-cmdStatus
      description = "Standard command status of this functional group."
      archive = true
      ref = imager.shutter/events/cmdStatus
    }

    {
      name = MIRROR-state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079)](https://docushare.tmt.org/docushare/dsweb/Services/Document-57492) plus alpha."
      maxRate = 1
      archive = true
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [TRUE, FALSE]
        }
        {
            name = selection
            description  = """
This state attribute indicates where the PV fold mirror is. The meaning of each enum value is as follows:

<ul>
 <li><b>DEPLOYED</b>:  The mirror is in the light path. It is considered deployed when the limit switch on the deployed position is engaged.</li>
 <li><b>RETRACTED</b>: The mirror is outside the light path. It is considered retracted when the limit switch on the retracted position is engaged.</li>
 <li><b>UNKNOWN</b>:   This functional group falls into this state before datuming is completed or when an error is detected.</li>
 <li><b>INTERMEDIATE</b>: After the datuming is completed and if no limit switches are engaged, this functional group falls into this state, which indicates that the mirror is somewhere between the deployed and retracted positions.</li>
</ul>
"""
            enum = [DEPLOYED, RETRACTED, UNKNOWN, INTERMEDIATE]
        }
        {
            name = debug
            description  = "debug level"
            enum = [DEBUG, INFO, WARN, ERROR]
        }
        {
            name = enabled
            description = "indicates whether this functional group is enabled"
            type = boolean
        }
        {
            name = interlock
            description = "indicates if an interlock is asserted by the Safety HCD"
            type = boolean
        }
        {
            name = inhibit
            description = "indicates if the inhibit signal to the underlying motion controller is active"
            type = boolean
        }
        {
            name  = power
            description = "indicates if the stepper motor is powered or not."
            type  = boolean
        }
        {
            name = motion
            enum = [UNDATUMED, DATUMING, DATUMED.IN_POSITION, DATUMED.HALFWAY, MOVING.COARSE, MOVING.PAUSE, MOVING.PUSH, MOVING.RAW, ERROR]
            description  = """
<ul>
 <li><b>UNDATUMED</b>: The status of the mechanism is unknown in this state.  Typically, the stage is stopped, but it may be moving if the motion is on-going when this Assembly is booted.</li>
 <li><b>DATUMING</b>: The mechanism is searching a limit switch.</li>
 <li><b>DATUMED</b>: The stage is staying a known position and the motor current is OFF.
  <ul>
    <li><b>IN_POSITION</b>: The stage is in either deployed or retracted position.</li>
    <li><b>HALFWAY</b>: The stage is somewhere between the deployed and retracted positions.</li>
   </ul>
 </li>
 <li><b>MOVING</b>: The stage is in motion and the current position is known.
  <ul>
   <li><b>COARSE</b>: The stage is in the coarse motion in either direction.</li>
   <li><b>PAUSE</b>: The stage is temporarily stopped before starting the push motion. The functional group will stay in this state very shortly.</li>
   <li><b>PUSH</b>: The stage is in the final slow push motion to search the limit switch.</li>
  </ul>
 <li><b>ERROR</b>: The status of the mechanism is unknown in this state. Typically, the stage is stopped in this state. But, it may be moving, for example, if the user operates the stage in an unusual way (e.g., directly trigger a command in the Web interface of the motion controller).</li>
 </li>
</ul>
"""
        }
        {
            name = errorMsg
            description = "Detailed error messages when 'error' is true. One string element per one active error."
            type = array
            dimensions = [16]
            items = {
              type = string
            }
        }
      ]
    }
    {
      name = MIRROR-cmdStatus
      description = "Standard command status of this functional group"
      archive = true
      ref = imager.shutter/events/cmdStatus
    }
    {
      name = MIRROR-stage
      description = "Current status of the PV fold mirror stage."
      maxRate = 10
      archive = false
      attributes = [
        {
            name  = rawPosition
            description = """
The current raw position reported by the HCD.

This value does not represent the absolute position of the stage. This value will be published only for engineering purposes.
"""
            type  = double
            units = steps
        }
        {
            name  = rawVelocity
            description = """
The current velocity reported by the HCD.

This value does not represent the velocity of the stage, but the rotation velocity of the stepper motor. For example, when the stage is contacting the hard stop, the stage stays in the current position even if this value is non-zero.

This value will be published only for engineering purposes.
"""
            type  = double
            units = step/s
        }
        {
            name  = rawAcceleration
            description = """
The current acceleration reported by the HCD.

This value does not represent the acceleration of the stage, but the rotation acceleration of the stepper motor. For example, when the stage is contacting the hard stop, the stage cannot accelerate even if this value is non-zero.

This value will be published only for engineering purposes.
"""
            type  = double
            units = step/s<sup>2</sup>
        }
        {
            name  = position
            description = """
Estimated current angle from the limit switch of the retracted position. The reported angle may be different from the actual position if the stepper motor experiences misstep or there is misconfiguration.

It becomes NaN when undatumed or datuming.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = deg
            minimum  = 0
            allowNaN = true
        }
        {
            name  = velocity
            description = """
Current commanded velocity of the stage.

This value becomes positive if the stage is moving in the direction of the deployed position.

This value will be published only for engineering purposes.
"""
            type  = double
            units = deg/s
        }
        {
            name  = acceleration
            description = """
Current commanded acceleration of the stage.

This value becomes positive if the stage is accelerating towards the deployed position.

This value will be published only for engineering purposes.
"""
            type  = double
            units = deg/s<sup>2</sup>
        }
        {
            name = switches
            description  = "indicates the raw status (on or off) of switches (two limit switches and two position switches)"
            type        = struct
            attributes = [
              {
                name = "deployLimit"
                description = "limit switch of the deployed position"
                type = boolean
              }
              {
                name = "retractLimit"
                description = "limit switch of the retracted position"
                type = boolean
              }
              {
                name = "deployPosition"
                description = "position switch of the deployed position"
                type = boolean
              }
              {
                name = "deployPosition"
                description = "position switch of the retracted position"
                type = boolean
              }
            ]
        }
      ]
    }
  ]

  observeEvents = [
    {
      name = exposureStart
      description = "This Observe Event indicates that a pupil imaging exposure is about to start."
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = exposureEnd
      description = """This Observe Event indicates the end of the pupil imaging exposure. Once this event is received, DMS can stop collecting metadata and OCS can start another exposure.

Note that the underlying HCD (or its child process) may be still writing the raw science frame to DMS when this event is issued.
"""
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = exposureAborted
      description = "This Observe Event indicates that the pupil imaging exposure has been aborted due to an observer's request or some technical issue."
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = reason
          description = "The reason why this exposure was aborted."
          type = string
        }
      ]
    }
    {
      name = irDetectorExposureState
      description = """
      This is a standardized IR detector state Observe Event.
      The irDetectorExposureState is provided as a state variable to indicate the current state of the PVC detector system.
      The irDetectorExposureState groups parameters that change relatively slowly, and this event will be published whenever any of its parameters changes.
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector description from which the readout is generated. This is always IRIS-PVC."
          type = string
        }
        {
          name = exposureInProgress
          description = """
            A boolean indictating if detector system is acquiring an exposure.
            It is delimited by exposureStart and exposureEnd Observe Events.
            exposureInProgress should be false if abortInProgress is true (TBD).
          """
          type = boolean
        }
        {
          name = abortInProgress
          description = """
            A boolean indictating if an abort has been requested and is underway
          """
          type = boolean
        }
        {
          name = isAborted
          description = """
            A boolean indictating if an abort has occurred and is completed.
            abortInProgress will be false when isAborted is true.
            isAborted will be set to false with the start of the next exposure
          """
          type = boolean
        }
        {
          name = operationalState
          description = """
          An enumeration that indicates if the detector system is available and operational with values: READY, BUSY, ERROR.
            *Allowable Values*
            <ul>
            <li>READY - indicates the system can execute exposures.
            <li>BUSY  - indicates system is BUSY with the most likely reason being it is acquiring data
            <li>ERROR - indicates the detector system is in an error state. This could happen as a result of a command or due to a spontaneous failure. Corrective action is required. The operationalState is reset to READY if the failure is cleared or to BUSY when the next exposure is started.
            </ul>
          """
          enum = [ READY | BUSY | ERROR ]
        }
        {
          name = errorMessage
          description = """
            An optional parameter that can be included when the detector system is in the ERROR operationalState to help understand the error state.
            This value should be cleared and removed from the state when the operationalState returns to READY.
          """
          type = string
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = irDetectorExposureData
      description = """
        This is a standardized IR detector state Observe Event.
        The irDetectorExposureData event contains fast-changing data about the internals of the current exposure.
        This data is useful for user interfaces and Sequencers. This event will be published at the full frame readout rate during an ongoing exposure (or maybe a little more frequently because one readout may take ~10 seconds (TBC)).
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector description from which the readout is generated. This is always IRIS-PVC."
          type = string
        }
        {
          name = readsInRamp
          description = """
            The integer total number of reads in the ramp. Value should be constant during an exposure..
          """
          type = integer
          minimum = 2
          maximum = 99999
        }
        {
          name = readsComplete
          description = """
            Integer number of currently completed reads from 1 to readsInRamp.
            Will be reset to 0 at the start of every ramp.
          """
          type = integer
          minimum = 0
          maximum = 99999
        }
        {
          name = rampsInExposure
          description = """
            The integer total number of ramps in the current exposure. Value should be constant during an exposure.
          """
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = rampsComplete
          description = """
            Integer number of completed ramps from 1 to rampsInExposure.
            Will be reset to 0 at the start of every exposure.
          """
          type = integer
          minimum = 0
          maximum = 99999
        }
        {
          name = exposureTime
          description = "Length (as a float) in seconds of the current exposure.  For example: 1.25"
          type = float
          units = s
          exclusiveMinimum = 0
        }
        {
          name = remainingExposureTime
          description = """
            Number (as a float) of seconds remaining in the current exposure.  For example: 1.25.
            Should count down in integer seconds -- no faster than 1 Hz.
          """
          type = float
          units = s
          minimum = 0
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
      ]
    }
    {
      name = dataWriteStart
      description = "This Observe Event indicates that the IRIS pupil viewing camera (PVC) has started writing a raw science frame to DMS."
      archive = true
      attributes = [
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = fileId
          description = "File ID of the data file that is being written."
          type = string
        }
      ]
    }
    {
      name = dataWriteEnd
      description = "This Observe Event indicates that the IRIS pupil viewing camera (PVC) has finished writing a raw science frame to DMS."
      archive = true
      attributes = [
        {
          name = exposure
          description = "Exposure number."
          type = integer
          minimum = 1
          maximum = 99999
        }
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = fileId
          description = "File ID of the data file that is being written or transferred."
          type = string
        }
      ]
    }
  ]

  alarms = [
    {
      name             = DETECTOR-watchdog
      description      = "DETECTOR functional group has become unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = DETECTOR-unrecoverableFailure
      description      = "The detector did not respond as expected and the error cannot be recovered."
      severityLevels   = [Critical]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = System
      probableCause    = "Software bug or hardware failure."
      operatorResponse = "Reboot the underlying Hawaii HCD and this assembly."
      autoAck          = false
      latched          = true
    }

    {
      name             = MIRROR-watchdog
      description      = "MIRROR functional group has become unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = MIRROR-incompatibleStageConfiguration
      description      = "The stage configuration in the Newport XPS motion controller is not compatible with this Assembly."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = System
      probableCause    = "Misconfiguration"
      operatorResponse = "Reconfigure the stage configuration in the Newport XPS motion controller and reboot it."
      autoAck          = false
      latched          = false
    }
    {
      name             = MIRROR-inconsistentSwitchStatus
      description      = "switch status is inconsistent"
      severityLevels   = [Warning, Critical]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection or malfunction of switches"
      operatorResponse = "Make sure that all relevant cables are connected to the Newport XPS motion controller properly and reboot this Assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = MIRROR-stepout
      description      = "step-out of the stepper motor is detected"
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Pupil Viewing Mode Assembly (IRIS.imager.pupilview)"
      alarmType        = Discrepancy
      probableCause    = "Wear-out of the mechanism."
      operatorResponse = "Report the issue to the instrument expert."
      autoAck          = false
      latched          = true
    }
  ]
}
