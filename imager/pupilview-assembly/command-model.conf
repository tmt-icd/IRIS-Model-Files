subsystem = IRIS
component = imager.pupilview

description = ""

receive = [
    {
        name = DETECTOR-init
        description = "This command initializes the DETECTOR functional group and reloads the configuration files. It does not trigger any readout or reset on the detector."
        completionType = longRunning
    }
    {
        name = DETECTOR-start-exposure
        description = "Starts a new exposure with the given parameters."
        requiredArgs = []
        args = [
            {
                name = exposureTime
                description = """
Exposure time.

(TODO: explain the exposure time contraint and set the default exposure time to the minimum one)
"""
                type = float
                units = s
            }
            {
                name = ROI
                description = "Region of interest."
                type = struct
                attributes = [
                  {
                    name  = x
                    description = ""
                    type  = integer
                    units = pixel
                    minimum = 0
                    default = 0
                  }
                  {
                    name  = y
                    description = ""
                    type  = integer
                    units = pixel
                    minimum = 0
                    default = 0
                  }
                  {
                    name  = width
                    description = ""
                    type  = integer
                    units = pixel
                    maximum = 2048
                    default = 2048
                  }
                  {
                    name  = height
                    description = ""
                    type  = integer
                    units = pixel
                    maximum = 2048
                    default = 2048
                  }
                ]
            }
            {
                name = TBD
                description = "TODO: define exposure parameters"
                type = float
            }
        ]
        completionType = longRunning
    }
    {
        name = DETECTOR-abort-exposure
        description = "This command aborts the current exposure in progress."
        completionType = longRunning
    }
    {
        name = DETECTOR-disable
        description = """This command disables this functional group. Any commands that turn on the power or trigger a new exposure will be rejected when disabled.

This command is expected to be called before starting the cool-down or warm-up procedure.
"""
        completionType = immediate
    }
    {
        name = DETECTOR-enable
        description = """
This command enables this functional group.

This command is expected to be called after the cool-down or warm-up procedure is completed.
"""
        completionType = immediate
    }
    {
        name = DETECTOR-power-on
        description = "This command turns on the power of the detector if it is not on (TBC)."
        completionType = longRunning
    }
    {
        name = DETECTOR-power-off
        description = """This command cancels the exposure in progress, and turns off the detector (TBC)."""
        completionType = longRunning
    }
    {
        name = DETECTOR-test
        description = "This command executes a self-test. Actual action to be taken is TBD. This command never starts an exposure nor reset the detector."
        completionType = immediate
        role = "eng"
    }
    {
        name = DETECTOR-debug
        description = "This will set the current debug level."
        completionType = immediate
        role = "eng"
    }
    
    {
        name = MIRROR-init
        description = """
This command initializes the MIRROR functional group and reloads the configuration files. It does not trigger any motion or initiate any action on the hardware.

If the stage position is halfway, the datum may be lost as a result of re-initialization.
"""
        completionType = longRunning
    }
    {
        name = MIRROR-datum
        description = "Start datuming of the fold mirror stage."
        completionType = longRunning
        preconditions  = ["MIRROR-state.motion == UNDATUMED || MIRROR-state.motion == ERROR"]
        postconditions = [
                          "MIRROR-state.motion == IN_POSITION",
                          "MIRROR-state.selection == RETRACTED",
                          "MIRROR-stage.power == false"
                         ]
    }
    {
        name = MIRROR-select
        description = "This command inserts or retracts the fold mirror into/from the science light path."
        requiredArgs = [target]
        args = [
            {
                name = target
                description = "Target position of the fold mirror."
                enum = [DEPLOY, RETRACT]
            }
        ]
        completionType = longRunning
        preconditions  = ["MIRROR-state.motion == DATUMED.IN_POSITION || MIRROR-state.motion == DATUMED.HALFWAY"]
        postconditions = [
                          "MIRROR-state.motion == IN_POSITION",
                          "MIRROR-state.selection == DEPLOYED || MIRROR-state.selection == RETRACTED",
                          "MIRROR-stage.power == false"
                         ]
    }
    {
        name = MIRROR-move
        description = "This command moves the fold mirror stage to an arbitrary position relative to the current position."
        requiredArgs = [target]
        args = [
            {
                name = target
                description = "Target position relative to the current position."
                type = double
                units = step
            }
            {
                name = velocity
                description = "Motion velocity."
                type = double
                units = step/s
                exclusiveMinimum = 0
                default = MIRROR-RawMotionVelocity
            }
            {
                name = acceleration
                description = "Motion acceleration."
                type = double
                units = step/s<sup>2</sup>
                exclusiveMinimum = 0
                default = MIRROR-RawMotionAcceleration
            }
            {
                name = minimumJerkTime
                description = "Minimum jerk time."
                type = double
                units = s
                default = MIRROR-RawMinJerkTime
            }
            {
                name = maximumJerkTime
                description = "Maximum jerk time."
                type = double
                units = s
                default = MIRROR-RawMaxJerkTime
            }
        ]
        completionType = longRunning
        role = "eng"
        preconditions  = ["MIRROR-state.motion == DATUMED:IN_POSITION || MIRROR-state.motion == DATUMED.HALFWAY || MIRROR-state.motion == MOVING:RAW"]
        postconditions = [
                          "MIRROR-state.motion == IN_POSITION || MIRROR-state.motion == HALFWAY",
                          "MIRROR-stage.power == false"
                          ]
    }
    {
        name = MIRROR-disable
        description = """
This command disables this functional group. Any commands that trigger a motion or turn on the motor current will be rejected when disabled.

This command is expected to be called before starting the cool-down or warm-up procedure.
"""
        completionType = immediate
        preconditions  = [
                          "MIRROR-state.motion  == DATUMED:IN_POSITION || MIRROR-state.motion == DATUMED.HALFWAY",
                          "MIRROR-state.enabled == true"
                         ]
        postconditions = ["MIRROR-state.enabled == false"]
    }
    {
        name = MIRROR-enable
        description = """
This command enables this functional group.

This command is expected to be called after the cool-down or warm-up procedure is completed.
"""
        completionType = immediate
        preconditions  = ["MIRROR-state.enabled == false"]
        postconditions = ["MIRROR-state.enabled == true"]
    }
    {
        name = MIRROR-park
        description = "This command does nothing."
        completionType = immediate
    }
    {
        name = MIRROR-stop
        description = "Stop the motion of the mirror stage and turn off the motor power."
        completionType = longRunning
        preconditions  = ["MIRROR-state.motion == DATUMING || MIRROR-state.motion == MOVING.*"]
        postconditions = [
                           "MIRROR-state.motion == UNDATUMED || MIRROR-state.motion == DATUMED.IN_POSITION || MIRROR-state.motion == DATUMED.HALFWAY || MIRROR-state.motion == ERROR",
                           "MIRROR-stage.power == false"
                          ]
    }
    {
        name = MIRROR-test
        description = "This command executes a self-test. Actual action to be taken is TBD. This command never drives the mirror stage."
        completionType = immediate
        role = "eng"
    }
    {
        name = MIRROR-debug
        description = "This will set the current debug level."
        completionType = immediate
        role = "eng"
    }
    
    {
        name = shutdown
        description = "Stop this assembly running. It does not send this command down to the underlying HCDs. The on-going motion or exposure may continue after this Assembly is shut down."
        completionType = longRunning
    }
]
