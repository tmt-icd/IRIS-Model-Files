subsystem = IRIS
component = imager.odgw

description = "Imager Detector Assembly Commands."

receive = [
    {
        name = exposure
        description = """Set the imager ODGW exposure modes

This command will perform the following actions for each of the four ODGWs: CONTINUOUS (continuously take exposures as triggered by NFIRAOS trigger signal, simultaneously step through the guide or dither table and sending exposure data to the NRTC), SATURATION (the same as CONTINUOUS but not data are sent to the NRTC), STOP (stop exposure), or NOOP (leave exposure mode unchanged).

Note that SATURATION is different from subarray mode in that the SATURATION window moves in accordance with position demands from TCS in the same way as ODGW. It can be used to protect against saturation caused by a bright object that is not fixed to the Imager field (i.e. a bright celestrial object during non-sidereal tracking and a non-sidereal celestrial object during sidereal tracking). When the bright object is fixed to the Imager field, an observer may use subarray mode, which has more advantage bececause it supports multiple windows.
"""
        requiredArgs = [mode]
        args = [
            {
                name = mode
                description = """
<ul>
<li> <b>CONTINUOUS</b>: continuously take exposures as instructed by NFIRAOS using the fast connection and send exposure data to the NRTC.
<li> <b>SATURATION</b>: continuously take exposures as instructed by NFIRAOS using the fast connection, but do not send exposure data to the TRTC.
<li> <b>STOP</b>: Stop continous exposure.
<li> <b>NOOP</b>: Leave ODGW mode unchanged.
</ul>
"""
                type = array
                dimensions: [4]
                items = {
                    enum = [CONTINUOUS, SATURATION, STOP, NOOP]
                }
            }
        ]
        preconditions  = ["Science exposure is not on-going in the underlying Imager detectors."]
        postconditions = ["state.detector is set accordingly"]
        completionType = longRunning
    }

    {
        name = cal-config
        description = """Specify names of calibration files required to process exposures taken with each ODGW.

<em>
Discussion: Unlike the OIWFS, which will need to maintain its own calibration images (flats, darks etc.), the ODGWs can simply use the calibration images from the imager (cutting out the matching ROIs).
</em>

<em>Discrete Command.</em>
"""
        args = [
            {
                name = flats
                description = "Flatfield filenames for each ODGW"
                type = array
                dimensions: [4]
                items = {
                      type = string
                }
            }
            {
                name = darks
                description = "Dark filenames for each ODGW"
                type = array
                dimensions: [4]
                items = {
                      type = string
                }
            }
        ]
        preconditions  = ["state.cmd = READY"]
        postconditions = ["state.cmd = READY"]
        completionType = longRunning
    }

    {
        name = init-acquisition-table
        description = """Set the current ODGW acquisition tables.

Each acquisition table is supplied as a string, one for each ODGW. If the active flag is set to OFF no table will be used.

<em>Discrete Command.</em>
"""
        args = [
            {
                name = active
                description = "Indicate whether each table is in use or not"
                type = array
                dimensions: [4]
                items = {
                      type = boolean
                }
            }
            {
                name = table
                description = "Table for each detector, encoded as strings"
                type = array
                dimensions: [4]
                items = {
                      type = string
                }
            }

        ]
        preconditions  = ["state.cmd = READY"]
        postconditions = ["state.cmd = READY"]
        completionType = longRunning
    }

    {
        name = tracking-type
        description = """Configure the guide/dither type for each ODGW.

The tracking-type command will set the guide/dither type for the ODGWs at a specified future time. This command has no effect on any detector that has been set inactive with the init-guide-table command.

The difference between GUIDE and DITHER is that no science exposure is happening during DITHER and therefore relaxed accuracy is allowed (i.e., different tables is used).

An optional timestamp can be provided to specify when in the future the command should take effect.

The behaviour of any unspecified command argument will remain unchanged from its previously commanded behavior.

<em>Discrete Command.</em>
"""
        requiredArgs = [trackingType]
        args = [
            {
                name = trackingType
                description = "Indicate whether which table to follow"
                type = array
                dimensions: [4]
                items = {
                    enum = [GUIDE, DITHER]
                }
            }
            {
                name = timestamp
                description = "Time at which the command should take effect"
                type = array
                dimensions: [4]
                type = taiDate
            }
        ]
        preconditions  = ["state.cmd = READY"]
        postconditions = ["state.cmd = READY"]
        completionType = longRunning
    }

    {
        name = table-jump
        description = """Jump to the specified rows of each ODGW guide/dither table

<em>Discrete Command.</em>
"""
        args = [
            {
                name = row
                description = "Row to jump to in each table. If -1, continue at current row"
                type = array
                dimensions: [4]
                items = {
                      type = integer
                }
            }

        ]
        preconditions  = ["state.cmd = CONTINUOUS"]
        postconditions = ["state.cmd = CONTINUOUS"]
        completionType = longRunning
    }

{
    name = offset
    description = """Provide static x,y ODGW positional offsets w.r.t. TCS demands in FCRS<sub>IRIS-ROT</sub> coordinates.

Any static offsets specified by the offset command are added to the continually varying positions from the TCS when the exposure command has set a given ODGW mode to CONTINUOUS or SATURATION (e.g., to account for guide star catalog position errors).

The offsetFlag array indicates which ODGWs are to be offset by this command.

<em>
Discussion: This command is intended for debugging or calibration.
</em>
"""
    requiredArgs = [offsetFlag, xyOffset]
    args = [
      {
        name          = xyOffset
        description   = "X,Y offsets for the four ODGWs"
        type          = array
        dimensions: [4,2]
        units         = mm
        items = {
          type        = double
        }
      }
      {
        name          = offsetFlag
        description   = "Flags indicating which ODGWs are to be offset"
        type          = array
        dimensions: [4]
        items = {
          type        = boolean
        }
      }
    ]
    preconditions  = ["state.cmd != UNINITIALIZED"]
    postconditions = ["(same as before the execution of this command)"]
    completionType = immediate
    role           = "eng"
  }

  {
    name = filter
    description = """Activate and set parameters of a low-pass filter (e.g., Butterworth, TBD) to TCS demand streams when following.

When an ODGW exposure mode is set to CONTINUOUS or SATURATION a low-pass Butterworth filter is applied to TCS demands when following, parameterized by the order and cutoff frequency attributes.

This command can be sent with only the active attribute set in order to activate/de-activate previously configured filters.
"""
    requiredArgs = [active]
    args = [
      {
        name = active
        description = "Indicate which ODGWs are to have filters applied"
        type = array
        dimensions: [4]
        items = {
          type = boolean
        }
      }
      {
        name = order
        description = "order of filters for the four ODGWs"
        type = array
        minimum = 1
        dimensions: [4]
        items {
          type = integer
        }
      }
      {
        name = cutoff
        description = "cutoff frequencies of filters for the four ODGWs"
        type = array
        minimum = 0
        units = Hz
        dimensions: [4]
        items {
          type = double
        }
      }
    ]
    preconditions  = ["state.cmd != UNINITIALIZED"]
    postconditions = ["(same as before the execution of this command)"]
    completionType = immediate
  }
    
]
