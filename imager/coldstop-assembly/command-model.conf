subsystem = IRIS
component = coldstop-assembly

description = """
Commands which can be accepted by IRIS Cold Stop Assembly.
This command model is based on the recommendation in "Software Design Patterns for Device and Component Controllers" which defines the standard sets of commands, and the command types (request or submit). The commands for component lifecycle defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf) is classified as "lifecycle".
"""

receive = [
    {
        name = INITIALIZE
        description = """
This command loads the configuration of this assembly from Configuration Service or a local file (TBD). It is accepted only when this assembly is in Loaded state. After successful completion of this command execution, this assembly will be staged in Initialized state. If it fails, this assembly will stay in Loaded state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

__TBD__: identify what configuration to be loaded

Command type: lifecycle
"""
    }
    {
        name = UNINITIALIZE
        description = """
This command stages this assembly in Loaded state from Initialized so that the initialization can be performed again after the configuration is changed. It does nothing other than that. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

Command type: lifecycle
"""
    }
    {
        name = STARTUP
        description = """
This command establishes connection to galil-hcd, and turns on the motion controller if it is off. It is accepted only when this assembly is in Initialized state. After successful completion of this command execution, this assembly will be staged in Running state. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, but it excites all the motors to hold the current positions of all axes. If any motion is on-going, it is interrupted and stopped. It may affect the thermal condition inside the dewar.

Command type: lifecycle
"""
    }
    {
        name = SHUTDOWN
        description = """
This command stages this assembly in Initialized state without cycling the power of the motion controller. This command can be called when any axis is not moving, or when this assembly is in an error state.

Before going to Initialized state, stop commands to all three axes will be issued to make sure that all axes are stopped. After that, connection to relevant HCDs will be released so that the connection can be reestablished (TBC).

Command type: lifecycle
"""
    }
    {
        name = INIT
        description = """
This command reloads configuration for the retraction axis without recycling the power of the motion controller. This command can be invoked only when the retraction axis is stopped.

Command type: request
"""
    }
    {
        name = TEST
        description = """This command executes a self-test for the retraction axis.

This command never moves the retraction axis.

__TBD__: Actual actions to be taken is TBD.

Command type: request
"""
    }
    {
        name = DATUM
        description = """
This command triggers datuming. It first performs homing of all axes in parallel. After the homing is completed, X axis will move to the specified position (HOME, IN or OUT).

Command type: submit
"""
        requiredArgs = [initialPosition]
        args = [
            {
                name = initialPosition
                description = "initial position of X axis after homing"
                enum = [HOME, IN, OUT]
                default = HOME
            }
        ]
    }
    {
        name = FOLLOW
        description = """
This command triggers the continuous adjusment of the cold stop based on the events received from TCS. If the cold stop is not inserted to the light path, the cold stop will be first inserted there, and then it starts continuous motion. This continuous motion will last until 'STOP' command is executed, or an unrecoverable error is detected. The description of the events from TCS can be found in [ICD TCS-IRIS (TMT.SEN.ICD.13.002.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Version-63705/ICD_TCS_IRIS_DRF07_20160613_tn_ec_jw.docx).

Command type: request
"""
    }
    {
        name = MOVE
        description = """
This command moves the cold stop stage to the specified position.

Command type: submit
"""
        requiredArgs = [x_pos, y_pos, theta]
        args = [
            {
                name = x_pos
                description = """
X axis absolute position or relative amount from the current positoin (depends on _x_mode_ ).

__TODO__: Define minimum and maximum.
"""
                type = float
                units = mm
                default = 0
            }
            {
                name = x_mode
                description = """
This argument specifies if the given position in _x_pos_ is absolute position or relative amount.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = y_pos
                description = """
Y axis absolute position or relative amount from the current positoin (depends on _y_mode_ ).

__TODO__: Define minimum and maximum.
"""
                type = float
                units = mm
                default = 0
            }
            {
                name = y_mode
                description = """
This argument specifies if the given position in _y_pos_ is absolute position or relative amount.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = theta
                description = """
Theta axis absolute angle or relative amount from the current angle (depends on _theta_mode_ ).

__TBD__: Determine the orientation of 0 degree.
"""
                minimum = -180
                maximum = 180
                exclusiveMinimum = true
                exclusiveMaximum = false
                type = float
                units = degree
                default = 0
            }
            {
                name = theta_mode
                description = """
This argument specifies if the given angle in _theta_ is absolute angle or relative amount from the current angle.
"""
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
        ]
    }
    {
        name = LOCK
        description = """
This command locks all the three axes in the cold stop. This command is used in 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) to lock mechanisms before pumping or warming the dewer.

__TBD__: Actual actions to be taken is TBD. This assembly would move the retraction axis to the dedicated position and enable mechanical lock to ensure that it won't be moved.

Command type: submit
"""
    }
    {
        name = UNLOCK
        description = """
This command unlocks all the three axes in the cold stop.

This command is used to unlock the axes after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent from moving the axis from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual actions to be taken is TBD. This may do nothing.

Command type: submit
"""
    }
    {
        name = PARK
        description = """
This command first stops all the axes and moves the stage to __TBD__ position. This command is supposed to be called at the end of each night.

__TBD__: Actual actions to be taken is __TBD__. Maybe this command just stops all the motion, and do nothing more not to unnecessarily shorten the lifetime of the mechanisms.

Command type: submit
"""
    }
    {
        name = STOP
        description = """
This command stops any on-going command execution or motion.

__TBD__: If this assembly cannot confirm both axes are stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
]
