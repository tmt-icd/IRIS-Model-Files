subsystem = IRIS
component = imager.coldstop

publish {
  events = [
    {
      name = RETRACT-state
      ref  = imager.adc/events/RETRACT-state
    }
    {
      name = RETRACT-cmdStatus
      ref  = imager.shutter/events/cmdStatus
    }
    {
      name = RETRACT-stage
      ref  = imager.adc/events/RETRACT-stage
    }

    {
      name = MASK-state
      description = """Standard fundtional group state as defiend in <a href="https://docushare.tmt.org/docushare/dsweb/Services/Document-57492">Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079)</a> plus alpha."""
      maxRate = 1
      archive = true
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNDATUMED, DATUMING, DATUMED, MOVING, UNKNOWN]
        }
        {
            name = debug
            description  = "debug level"
            enum = [DEBUG, INFO, WARN, ERROR]
        }
        {
            name = enabled
            description = "indicates whether this functional group is enabled"
            type = boolean
        }
        {
            name = interlock
            description = "indicates if an interlock is asserted by the Safety HCD"
            type = boolean
        }
        {
            name = inhibit
            description = "indicates if the inhibit signal to the underlying motion controller(s) is active"
            type = boolean
        }
        {
            name  = power
            description = "indicates if the stepper motors are powered or not."
            type  = boolean
        }
        {
            name        = temperature
            description = "summary of the current temperature state of all three stages."
            enum        = [NORMAL | HIGH | UNKNOWN | NA]
        }
        {
            name = error
            description  = "indicates if one or more errors present."
            type = boolean
        }
        {
            name = errorMsg
            description = "Detailed error messages when 'error' is true. One string element per one active error."
            type = array
            dimensions = [16]
            items = {
              type = string
            }
        }
      ]
    }
    {
      name = MASK-cmdStatus
      ref  = imager.shutter/events/cmdStatus
    }
    {
      name = MASK-rotaryStage
      description = "Current status of the cold stop rotary stage."
      ref  = imager.adc/events/PRISM-p1
      archive = true
    }
    {
      name = MASK-rotaryStageMotion
      description = "Motion status of the cold stop rotary stage."
      ref  = imager.adc/events/PRISM-p1Motion
      archive = true
    }
    {
      name = MASK-xStage
      description = "Current status of the cold stop precise X linear stage."
      ref  = imager.adc/events/PRISM-p1
      archive = true
    }
    {
      name = MASK-xStageMotion
      description = "Motion status of the cold stop precise X linear stagee."
      archive = true
      attributes = [
        {
            name = onTarget
            description  = "whether the stage is on the target position or not"
            type = boolean
        }
        {
            name  = rawPosition
            description = """
The raw position reported by the HCD.

This value does not always represent the absolute position of the stage. This can be a meaningless value when datuming. This value will be published only for engineering purposes.
"""
            type  = double
            units = steps
        }
        {
            name  = position
            description = """
The estimated position of the stage from the datum.

It becomes NaN when undatumed or datuming.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = mm
            allowNaN = true
            exclusiveMinimum = -Inf
            exclusiveMaximum = Inf
        }
        {
            name  = positionError
            description = """
The estimated position error of the stage.

It becomes NaN when undatumed or datuming.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = mm
            allowNaN = true
            exclusiveMinimum = -Inf
            exclusiveMaximum = Inf
        }
        {
            name  = velocity
            description = """
Velocity of the stage.

This value will be published only for engineering purposes.
"""
            type  = double
            units = mm/s
            exclusiveMinimum = -Inf
            exclusiveMaximum = Inf
        }
        {
            name  = acceleration
            description = """
Acceleration of the stage.

This value will be published only for engineering purposes.
"""
            type  = double
            units = mm/s<sup>2</sup>
            exclusiveMinimum = -Inf
            exclusiveMaximum = Inf
        }
        {
            name  = targetPosition
            description = """
The target position of the current motion if a motion is ongoing, or that of the previous motion if a motion is not ongoing. The definition of the angle is the same as the "position" attribute.

It becomes NaN when initialized.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = mm
            allowNaN = true
            exclusiveMinimum = -Inf
            exclusiveMaximum = Inf
        }
        {
          name          = timestamp
          description   = "The best guess of the time when the position was sampled (units and epoch are TBD)"
          units         = mjd
          type          = long
        }
        {
          name          = timestampLowerBoundary
          description   = "Lower boundary of the confidence interval of the timestamp. The definition of the confident level is TBD."
          units         = second
          maximum       = 0
          type          = double
        }
        {
          name          = timestampUpperBoundary
          description   = "Upper boundary of the confidence interval of the timestamp. The definition of the confident level is TBD."
          units         = second
          minimum       = 0
          type          = double
        }
      ]
    }
    {
      name = MASK-yStage
      description = "Current status of the cold stop precise Y linear stage."
      ref  = imager.adc/events/PRISM-p1
      archive = true
    }
    {
      name = MASK-yStageMotion
      description = "Motion status of the cold stop precise Y linear stagee."
      ref  = imager.coldstop/events/MASK-xStageMotion
      archive = true
    }

    {
      name = MASK-rotaryStageTarget
      description = "Target position of the cold stop rotary stage. This event is expected to be subscribed by the underlying Newport HCD."
      archive = false
      attributes = [
        {
            name         = target
            description  = "Target position of the stage. Can be NaN when not following."
            units        = steps
            type         = double
            allowNaN     = true
        }
        {
            name          = timestamp
            description   = "Time when valid (units and epoch are TBD). Reset to -1 when not following (TBC)."
            units         = mjd
            type          = long
        }
      ]
    }
    {
      name = MASK-xStageTarget
      description = "Target position of the cold stop precise X linear stage. This event is expected to be subscribed by the underlying Newport HCD."
      ref  = imager.coldstop/events/MASK-rotaryStageTarget
      archive = false
    }
    {
      name = MASK-yStageTarget
      description = "Target position of the cold stop precise Y linear stage. This event is expected to be subscribed by the underlying Newport HCD."
      ref  = imager.coldstop/events/MASK-rotaryStageTarget
      archive = false
    }
  ]

  alarms = [
    {
      name             = MASK-watchdog
      description      = "The MASK functional group is unresponsive."
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-incompatibleStageConfiguration
      description      = "The stage configuration for the rotary stage and/or precise XY stages in the Newport XPS motion controller is not compatible with this functional group."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = System
      probableCause    = "Misconfiguration"
      operatorResponse = "Reconfigure the stage configuration in the Newport XPS motion controller and reboot it."
      autoAck          = false
      latched          = false
    }
    {
      name             = MASK-missingPupilRotationTarget
      description      = "Haven't received the target pupil rotation angle from TCS for a long time. For that, the S/N ratio of the ongoing exposure may be worse than usual."
      severityLevels   = [Warning, Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = System
      probableCause    = "Network connection with TCS is lost."
      operatorResponse = "Judge if the current observation should continue or be interrupted. Check the status of TCS and the network connection."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-rotaryStageInconsistentSensorStatus
      description      = "Sensor status of the rotary stage is inconsistent."
      severityLevels   = [Warning, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection, or malfunction of the hall sensor or the hall sensor readout electronics."
      operatorResponse = "Make sure that all relevant cables are connected to the Newport XPS motion controller properly and reboot this Assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-xStageInconsistentSensorStatus
      description      = "Sensor status of the precise X linear stage is inconsistent."
      severityLevels   = [Warning, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection, or malfunction of the hall sensor or the hall sensor readout electronics."
      operatorResponse = "Make sure that all relevant cables are connected to the Newport XPS motion controller properly and reboot this Assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-yStageInconsistentSensorStatus
      description      = "Sensor status of the precise Y linear stage is inconsistent."
      severityLevels   = [Warning, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection, or malfunction of the hall sensor or the hall sensor readout electronics."
      operatorResponse = "Make sure that all relevant cables are connected to the Newport XPS motion controller properly and reboot this Assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-overheat
      description      = "Overheating detected"
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = Absolute
      probableCause    = "Wrong motor current setting for the rotary stage, the precise X linear stage, and/or the precise Y linear stage."
      operatorResponse = "Monitor the temperature and wait until it is cooled."
      autoAck          = false
      latched          = true
    }
    {
      name             = MASK-inconsistentHallSensorSettings
      description      = "Inconsistent hall sensor settings."
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = Discrepancy
      probableCause    = "Someone changed the hall sensor settings manually."
      operatorResponse = "Inspect the hall sensor settings."
      autoAck          = false
      latched          = true
    }

    {
      name             = RETRACT-watchdog
      description      = "The RETRACT functional group is unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = RETRACT-incompatibleStageConfiguration
      description      = "The stage configuration for the retract stage in the Newport XPS motion controller is not compatible with this functional group."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = System
      probableCause    = "Misconfiguration"
      operatorResponse = "Reconfigure the stage configuration in the Newport XPS motion controller and reboot it."
      autoAck          = false
      latched          = false
    }
    {
      name             = RETRACT-inconsistentSensorStatus
      description      = "Sensor status of the retract stage is inconsistent."
      severityLevels   = [Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection, or malfunction of sensors or the hall sensor readout electronics."
      operatorResponse = "Make sure that all relevant cables are connected to the Newport XPS motion controller properly and reboot this Assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = RETRACT-stepout
      description      = "Stepout of the stepper motor is detected in the retract stage"
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = Discrepancy
      probableCause    = "Wear-out of the retract stage mechanism."
      operatorResponse = "Report the issue to the instrument expert."
      autoAck          = false
      latched          = true
    }
    {
      name             = RETRACT-overheat
      description      = "Overheating detected"
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = Absolute
      probableCause    = "The cold stop mask was retracted/deployed too many times in a short period."
      operatorResponse = "Monitor the temperature and wait until it is cooled."
      autoAck          = false
      latched          = true
    }
    {
      name             = RETRACT-inconsistentHallSensorSettings
      description      = "Inconsistent hall sensor settings for the retract stage are detected."
      severityLevels   = [Major]
      location         = "IRIS Cold Stop Assembly (IRIS.imager.coldstop)"
      alarmType        = Discrepancy
      probableCause    = "Someone changed the hall sensor settings manually."
      operatorResponse = "Inspect the hall sensor settings."
      autoAck          = false
      latched          = true
    }
  ]
}