subsystem = IRIS
component = sci-adc-assembly

description = """
Commands which can be accepted by IRIS Science Path ADC Assembly.

This command model is designed based on [Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.DRF01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_DRF01_b.docx). As proposed by the design pattern, standard assembly commands and assembly-specific commands are provided for each functional group. All commands are classified into either 'request' or 'submit' based on the command type defintion described in the design pattern document.
"""

receive = [
    {
        name = RETRACT_INIT
        description = """This command reloads configuration for the linear stage without recycling the power of the motion controller. This command can be invoked only when the linear stage is stopped.

Command type: request
"""
    }
    {
        name = PRISM_INIT
        description = """This command reloads configuration for the rotary stages without recycling the power of the motion controller. This command can be invoked only when both rotatry stages are stopped.

Command type: request
"""
    }
    {
        name = RETRACT_TEST
        description = """This command executes a self-test for the linear stage.

This command never moves the linear stage.

__TBD__: Actual action to be taken is TBD.

Command type: request
"""
    }
    {
        name = PRISM_TEST
        description = """This command executes a self-test for the rotary stages.

This command never moves the rotary stages.

__TBD__: Actual action to be taken is TBD.

Command type: request
"""
    }
    {
        name = RETRACT_DATUM
        description = """
This command triggers datuming of the linear stage. It first performs homing of the linear stage. After the homing is completed, the linear stage moves to the specified initial position (HOME, IN or OUT).

Command type: submit
"""
        args = [
            {
                name = initialPosition
                description = "initial position after homing"
                enum = [HOME, IN, OUT]
                default = HOME
            }
        ]
    }
    {
        name = PRISM_DATUM
        description = """This command triggers datuming of two rotary stages. It first performs homing of both rotary stages, and then move then rotate to 0 degree angle.

Command type: submit
"""
    }
    {
        name = PRISM_FOLLOW
        description = """
This command triggers the continous rotation of two prisms based on the events received from TCS. This continuous rotation will last until 'PRISM_STOP' command is executed, or an unrecoverable error is detected. The scheme for priming and tracking motion is described in [ICD TCS-IRIS (TMT.SEN.ICD.13.002.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Version-63705/ICD_TCS_IRIS_DRF07_20160613_tn_ec_jw.docx).

If FIELD mode (field rotation tracking mode for sidereal and non-sidereal objects) is chosen, the angles of two prisms will be determined by the events from TCS. If PUPIL mode (pupil rotation tracking mode for non-sidereal objects) is chosen, the angles of two prisms will be determined by TCS.cmIRIS.pupilRotation.

__TBD__: check if we need to implement pupil rotation tracking mode

Command type: request
"""
        args = [
            {
                name = mode
                description = "tracking mode"
                enum = [FIELD, PUPIL]
                default = FIELD
            }
        ]
    }
    {
        name = RETRACT_LOCK
        description = """
This command locks the linear stage. This command is used in 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) before pumping or warming the dewer.

__TBD__: Actual action to be taken is TBD. This assembly would move the linear stage to the dedicated position and enable mechanical lock to ensure that it won't be moved.

Command type: submit
"""
    }
    {
        name = PRISM_LOCK
        description = """
This command locks two rotary stages. This command is used in 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) before pumping or warming the dewer.

__TBD__: Actual action to be taken is TBD. This assembly would move rotary stages to dedicated positions and enable mechanical lock to ensure that they won't be moved.

Command type: submit
"""
    }
    {
        name = RETRACT_UNLOCK
        description = """
This command unlocks the linear stage.

This command is used to unlock the linear stage after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent the linear stage from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual action to be taken is TBD. This command may do nothing.

Command type: submit
"""
    }
    {
        name = PRISM_UNLOCK
        description = """
This command unlocks two rotary stages.

This command is used to unlock the rotary stages after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent the rotary stages from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual action to be taken is TBD. This command may do nothing.

Command type: submit
"""
    }
    {
        name = RETRACT_PARK
        description = """This command first stops the linear stage and moves it to __TBD__ position. This command is supposed to be called at the end of each night.

__TBD__: Actual action to be taken is __TBD__. Maybe this command just stops all the motion, and do nothing more not to unnecessarily shorten the lifetime of the mechanisms.

Command type: submit
"""
    }
    {
        name = PRISM_PARK
        description = """This command basically just stops two rotary stages and do nothing else. This command is supposed to be called at the end of each night.

__TBD__: Actual action to be taken is __TBD__. Maybe this command just stops all the motion, and do nothing more not to unnecessarily shorten the lifetime of the mechanisms.

Command type: submit
"""
    }
    {
        name = RETRACT_MOVE
        description = """This command moves the linear stage to the specified position.

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = "position to move"
                enum = [IN, OUT]
            }
        ]
    }
    {
        name = PRISM_MOVE
        description = """This command rotates two prisms at once to the specified angles.

Command type: submit
"""
        requiredArgs = [prism1_deg, prism2_deg]
        args = [
            {
                name = prism1_deg
                description = """
Upper prism absolute angle or relative amount from the current angle (depends on prism1_mode).
The valid range is -180 deg to +180 deg.
"""
                type = float
                default = 0
            }
            {
                name = prism1_mode
                description = "This argument specifies if the given angle in prism1_dig is absolute angle or relative amount."
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = prism2_deg
                description = """
Lower prism absolute angle or relative amount from the current angle (depends on prism2_mode).
The valid range is -180 deg to +180 deg.
"""
                type = float
                default = 0
            }
            {
                name = prism2_mode
                description = "This argument specifies if the given angle in prism2_deg is absolute angle or relative amount."
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
        ]
    }
    {
        name = RETRACT_STOP
        description = """This command stops any on-going command execution or motion of the linear stage.

__TBD__: If this assembly cannot confirm the linear stage is stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
    {
        name = PRISM_STOP
        description = """This command stops any on-going command execution or motion of rotary stages.

__TBD__: If this assembly cannot confirm both rotary stages are stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
]
