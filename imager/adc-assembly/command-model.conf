subsystem = IRIS
component = sci-adc-assembly

description = """
Commands which can be accepted by IRIS Science Path ADC Assembly.
This command model is based on the recommendation in "Software Design Patterns for Device and Component Controllers" which defines the standard sets of commands, and the command types (request or submit). The commands for component lifecycle defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf) is classified as "lifecycle".
"""

receive = [
    {
        name = INITIALIZE
	description = """
This command loads the configuration of this assembly from Configuration Service or a local file (TBD). It is accepted only when this assembly is in Loaded state. After successful completion of this command execution, this assembly will be staged in Initialized state. If it fails, this assembly will stay in Loaded state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

__TODO__: identify what configuration to be loaded

Command type: lifecycle
"""
    }
    {
        name = UNINITIALIZE
        description = """
This command stages this assembly in Loaded state from Initialized so that the initialization can be performed again after the configuration is changed. It does nothing other than that. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

Command type: lifecycle
"""
    }
    {
        name = STARTUP
        description = """
This command establishes connection to galil-hcd. It is accepted only when this assembly is in Initialized state. After successful completion of this command execution, this assembly will be staged in Running state. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, but it excites all the motors to hold the current positions of all axes. If any motion is on-going, it is interrupted and stopped. It may affect the thermal condition inside the dewar.

Command type: lifecycle
"""
    }
    {
        name = SHUTDOWN
        description = """
This command stages this assembly in Initialized state without cycling the power of the motion controller. This command can be called when any axis is not moving, or when this assembly is in an error state.

Before going to Initialized state, stop commands to all three axes will be issued to make sure that all axes are stopped. After that, connection to relevant HCDs will be released so that the connection can be reestablished (TBC).

Command type: lifecycle
"""
    }
    {
        name = RETRACT_INIT
        description = """This command reloads configuration for the retraction axis without recycling the power of the motion controller. This command can be invoked only when the retraction axis is stopped.

Command type: request
"""
    }
    {
        name = PRISM_INIT
        description = """This command reloads configuration for the prism axes without recycling the power of the motion controller. This command can be invoked only when both prism axes are stopped.

Command type: request
"""
    }
    {
        name = RETRACT_TEST
        description = """This command executes a self-test for the retraction axis.

This command never moves the retraction axis.

__TBD__: Actual actions to be taken is TBD.

Command type: request
"""
    }
    {
        name = PRISM_TEST
        description = """This command executes a self-test for the prism axes.

This command never moves the prism axes.

__TBD__: Actual actions to be taken is TBD.

Command type: request
"""
    }
    {
        name = RETRACT_DATUM
        description = """
This command triggers datuming of the retraction axis. It first performs homing of the retraction axis. After the homing is completed, the retraction axis moves to the specified initial position (HOME, IN or OUT).

Command type: submit
"""
        args = [
            {
                name = initialPosition
                description = "initial position after homing"
                enum = [HOME, IN, OUT]
                default = HOME
            }
        ]
    }
    {
        name = PRISM_DATUM
        description = """This command triggers datuming of two prism axes. It first performs homing of both axes, and then move then rotate to 0 degree angle.

Command type: submit
"""
    }
    {
        name = PRISM_FOLLOW
        description = """
This command triggers the continous rotation of two prisms based on the events received from TCS. This continuous rotation will last until 'PRISM_STOP' command is executed, or an unrecoverable error is detected. The scheme for priming and tracking motion is described in [ICD TCS-IRIS (TMT.SEN.ICD.13.002.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Version-63705/ICD_TCS_IRIS_DRF07_20160613_tn_ec_jw.docx).

If FIELD mode (field rotation tracking mode for sidereal and non-sidereal objects) is chosen, the angles of two prisms will be determined by the events from TCS. If PUPIL mode (pupil rotation tracking mode for non-sidereal objects) is chosen, the angles of two prisms will be determined by TCS.cmIRIS.pupilRotation.

__TBD__: check if we need to implement pupil rotation tracking mode

Command type: request
"""
        args = [
            {
                name = mode
                description = "tracking mode"
                enum = [FIELD, PUPIL]
                default = FIELD
            }
        ]
    }
    {
        name = RETRACT_LOCK
        description = """
This command locks the retraction axis. This command is used in 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) before pumping or warming the dewer.

__TBD__: Actual actions to be taken is TBD. This assembly would move the retraction axis to the dedicated position and enable mechanical lock to ensure that it won't be moved.

Command type: submit
"""
    }
    {
        name = PRISM_LOCK
        description = """
This command locks two prism axes. This command is used in 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) before pumping or warming the dewer.

__TBD__: Actual actions to be taken is TBD. This assembly would move prism axes to dedicated positions and enable mechanical lock to ensure that they won't be moved.

Command type: submit
"""
    }
    {
        name = RETRACT_UNLOCK
        description = """
This command unlocks the retraction axis.

This command is used to unlock the retraction axis after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent from moving the axis from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual actions to be taken is TBD. This command may do nothing.

Command type: submit
"""
    }
    {
        name = PRISM_UNLOCK
        description = """
This command unlocks two prism axes.

This command is used to unlock the prism axes after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent from moving the axes from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual actions to be taken is TBD. This command may do nothing.

Command type: submit
"""
    }
    {
        name = RETRACT_PARK
        description = """This command first stops the retraction axis and moves it to __TBD__ position. This command is supposed to be called at the end of each night.

__TBD__: Actual actions to be taken is __TBD__. Maybe this command just stops all the motion, and do nothing more not to unnecessarily shorten the lifetime of the mechanisms.

Command type: submit
"""
    }
    {
        name = PRISM_PARK
        description = """This command basically just stops two prism axes and do nothing else. This command is supposed to be called at the end of each night.

__TBD__: Actual actions to be taken is __TBD__. Maybe this command just stops all the motion, and do nothing more not to unnecessarily shorten the lifetime of the mechanisms.

Command type: submit
"""
    }
    {
        name = RETRACT_MOVE
        description = """This command moves the retraction axis to the specified position.

Command type: submit
"""
        requiredArgs = [position]
        args = [
            {
                name = position
                description = "position to move"
                enum = [IN, OUT]
            }
        ]
    }
    {
        name = PRISM_MOVE
        description = """This command rotates two prisms at once to the specified angles.

Command type: submit
"""
        requiredArgs = [prism1_deg, prism2_deg]
        args = [
            {
                name = prism1_deg
                description = """
Upper prism absolute angle or relative amount from the current angle (depends on prism1_mode).
The valid range is -180 deg to +180 deg.
"""
                type = float
                default = 0
            }
            {
                name = prism1_mode
                description = "This argument specifies if the given angle in prism1_dig is absolute angle or relative amount."
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
            {
                name = prism2_deg
                description = """
Lower prism absolute angle or relative amount from the current angle (depends on prism2_mode).
The valid range is -180 deg to +180 deg.
"""
                type = float
                default = 0
            }
            {
                name = prism2_mode
                description = "This argument specifies if the given angle in prism2_deg is absolute angle or relative amount."
                enum = [ABSOLUTE, RELATIVE]
                default = RELATIVE
            }
        ]
    }
    {
        name = RETRACT_STOP
        description = """This command stops any on-going command execution or motion of the retraction axis.

__TBD__: If this assembly cannot confirm the axis is stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
    {
        name = PRISM_STOP
        description = """This command stops any on-going command execution or motion of prism axes.

__TBD__: If this assembly cannot confirm both axes are stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
]
