subsystem = IRIS
component = imager.filter

publish {
  events = [
    {
      name = current
      description = "Current imager filter settings"
      maxRate = 1
      archive = true
      attributes = [
        {
          name = name
          description  = """
Current imager filter name. When two or more filters are inserted in the science light path, filter names are concatinated with TBD characters in the order of wheel number. This attribute becomes empty when any of the filter wheels are moving or stopped in an intermediate position.

When a dark plate, or two or more narrow band filters are inserted in the science light path, this string becomes 'dark'.

When any filter is not inserted in the science light path, this string becomes 'through'.
"""
          type = string
        }
        {
          name = target
          description  = "Demanded filter name."
          type = string
        }
        {
          name = wavelength
          description = """
Current effective filter wavelength. Effective wavelength is defined as

```math

\frac{\int \lambda f_{\rm imager} \left( \lambda \right) \prod_{i=1}^5 f_i \left( \lambda \right) d \lambda}{\int f_{\rm imager} \left( \lambda \right) \prod_{i=1}^5 f_i \left( \lambda \right) d \lambda}
```

where $`\lambda`$ is the wavelength, $` f_{\rm imager} \left( \lambda \right) `$ is the throughput of the IRIS Imager except filters and $` f_i \left( \lambda \right) `$ is the throughput of the filter in the filter wheel #i.

This value can be NaN if not all five filter wheels are at known slot positions or if a dark filter is in place.

<em>Discussion: This information is required by the AOESW because the non-common path aberration correction is wavelength-dependent.</em>
"""
          type = double
          units = microns
          allowNaN = true
        }
        {
          name = dark
          description  = "Indicates whether a dark filter is inserted or not."
          type = boolean
        }
      ]
    }
    {
      name = state
      description = """Standard assembly state as defiend in <a href="https://docushare.tmt.org/docushare/dsweb/Services/Document-57492">Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079)</a> plus more."""
      maxRate = 1
      archive = true
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY]
        }
        {
            name = move
            description  = "indicates if any of the filte wheels is moving"
            type = boolean
        }
        {
            name = onTarget
            description  = "indicates if all filter wheels are on the requested target position"
            type = boolean
        }
        {
            name = selection1
            description = "Selected filter slot in the filter wheel #1. UNKNOWN indicates that this filter wheel has not been datumed."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection2
            description = "Selected filter slot in the filter wheel #2. UNKNOWN indicates that this filter wheel has not been datumed."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection3
            description = "Selected filter slot in the filter wheel #3. UNKNOWN indicates that this filter wheel has not been datumed."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection4
            description = "Selected filter slot in the filter wheel #4. UNKNOWN indicates that this filter wheel has not been datumed."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection5
            description = "Selected filter slot in the filter wheel #5. UNKNOWN indicates that this filter wheel has not been datumed."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = debug
            description  = "debug level"
            enum = [DEBUG, INFO, WARN, ERROR]
        }
        {
            name  = power
            description = "indicates if any of the stepper motor is powered"
            type  = boolean
        }
        {
            name = enabled
            description = "indicates whether this assembly is enabled"
            type = boolean
        }
        {
            name = interlock
            description = "indicates if an interlock is asserted by the Safety HCD"
            type = boolean
        }
        {
            name = inhibit
            description = "indicates if the inhibit signal to any of the underlying motion controllers is active"
            type = boolean
        }
        {
            name        = temperature
            description = "summary of the current temperature state of all filter wheels."
            enum        = [NORMAL | HIGH | UNKNOWN | NA]
        }
        {
            name = error
            description  = "indicates if one or more errors present."
            type = boolean
        }
        {
            name = errorMsg
            description = "Detailed error messages when 'error' is true. One string element per one active error."
            type = array
            dimensions = [16]
            items = {
              type = string
            }
        }
      ]
    }
    {
      name = cmdStatus
      ref  = imager.shutter/events/cmdStatus
    }
    {
      name = imgThroughput
      description = "Current IRIS Imager overall throughput."
      maxRate = 1
      archive = false
      attributes = [
        {
          name        = wavelength
          description = "Wavelength at which the throughput is defined. The granularity is TBD."
          units       = microns
          type        = array
          items = {
            type    = double
            minimum = 0.81
            maximum = 2.45
          }
        }
        {
          name        = throughput
          description = "Throughput at each wavelength. The number of element is equal to that of 'wavelength'."
          type        = array
          items       = {
            type    = double
            minimum = 0
            maximum = 1
          }
        }
      ]
    }
    {
      name = wheel1
      description = "Current status of filter wheel #1."
      maxRate = 1
      archive = false
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY]
        }
        {
            name = move
            description  = "whether the filter wheel is moving or not"
            type = boolean
        }
        {
            name = onTarget
            description  = "whether the filter wheel is on the target position or not"
            type = boolean
        }
        {
            name  = rawPosition
            description = """
The current raw position reported by the HCD.

This value does not always represent the absolute position of the filter wheel. This value will be published only for engineering purposes.
"""
            type  = double
            units = steps
        }
        {
            name  = rawVelocity
            description = """
The current velocity reported by the HCD.

This value will be published only for engineering purposes.
"""
            type  = double
            units = step/s
        }
        {
            name  = rawAcceleration
            description = """
The current acceleration reported by the HCD.

This value will be published only for engineering purposes.
"""
            type  = double
            units = step/s<sup>2</sup>
        }
        {
            name  = position
            description = """
The current estimated angle of the filter wheel from the datum in the clockwise direction viewing from the top.

It becomes NaN when undatumed or datuming.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = degree
            allowNaN = true
            minimum = 0
            exclusiveMaximum = 360
        }
        {
            name  = velocity
            description = """
Current commanded velocity of the stage.

This value becomes positive if the filter wheel is rotating in the clockwise direction.

This value will be published only for engineering purposes.
"""
            type  = double
            units = deg/s
        }
        {
            name  = acceleration
            description = """
Current commanded acceleration of the stage.

This value becomes positive if the stage is accelerating towards the clockwise direction.

This value will be published only for engineering purposes.
"""
            type  = double
            units = deg/s<sup>2</sup>
        }
        {
            name  = targetPosition
            description = """
The target angle of the filter wheel of the current motion if a motion is on-going, or that of the previous motion if a motion is not on-going. The definition of the angle is the same as the "position" attribute.

It is reset to NaN when initialized.

This value will be published only for engineering purposes.
"""
            type     = double
            units    = degree
            allowNaN = true
            minimum = 0
            exclusiveMaximum = 360
        }
        {
            name  = power
            description = "indicates if the stepper motor is powered or not."
            type  = boolean
        }
        {
            name = inhibit
            description = "indicates if the inhibit signal to the underlying motion controller is active"
            type = boolean
        }
        {
          name = selection
          description = "The filter slot currently in place. UNKNOWN indicates that this filter wheel has not been datumed."
          enum = [SLOT00, SLOT01, SLOT02, SLOT03, SLOT04, SLOT05, SLOT06, SLOT07, SLOT08, SLOT09, SLOT10, SLOT11, SLOT12, SLOT13, SLOT14, INTERMEDIATE, UNKNOWN]
        }
        {
          name = targetSelection
          description = "the target filter slot of the current motion if a motion is on-going, or that of the previous motion if a motion is not on-going."
          enum = [SLOT00, SLOT01, SLOT02, SLOT03, SLOT04, SLOT05, SLOT06, SLOT07, SLOT08, SLOT09, SLOT10, SLOT11, SLOT12, SLOT13, SLOT14, UNKNOWN]
        }
        {
          name = filterName
          description = "Name of the filter currently in place. Empty if the filter wheel is moving or the filter wheel is in the middle of two slots."
          type = string
        }
        {
            name        = temperature
            description = "Current temperature state."
            enum        = [NORMAL | HIGH | UNKNOWN | NA]
        }
        {
            name        = currentTemperature
            description = "Current temperature of the stepper motor (TBC)."
            type        = float
            units       = K
            allowNaN    = true
            minimum     = 0
        }
        {
            name        = temperatureThreshold
            description = "Current temperature threshold for the overheating protection."
            type        = float
            units       = K
            minimum     = 0
        }
        {
            name = error
            description  = "indicates if one or more errors present."
            type = boolean
        }
        {
            name = errorMsg
            description = "Detailed error messages when 'error' is true. One string element per one active error."
            type = array
            dimensions = [16]
            items = {
              type = string
            }
        }
        {
          name = directedOutput
          description = "the status of the directed output from the hall sensor readout electronics."
          type = boolean
        }
        {
          name = undirectedOutput
          description = "the status of the undirected output from the hall sensor readout electronics."
          type = boolean
        }
        {
          name = comparatorOutput
          description = "the status of the comparator output from the hall sensor readout electronics."
          type = boolean
        }
      ]
    }
    {
      name = wheel2
      description = "Current status of filter wheel #2."
      ref  = wheel1
    }
    {
      name = wheel3
      description = "Current status of filter wheel #3."
      ref  = wheel1
    }
    {
      name = wheel4
      description = "Current status of filter wheel #4."
      ref  = wheel1
    }
    {
      name = wheel5
      description = "Current status of filter wheel #5."
      ref  = wheel1
    }
  ]

  alarms = [
    {
      name             = watchdog
      description      = "This assembly is unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Filter Exchanger Assembly (IRIS.imager.filter)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = incompatibleStageConfiguration
      description      = "The stage configuration in the Newport XPS motion controller is not compatible with this assembly."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Filter Exchanger Assembly (IRIS.imager.filter)"
      alarmType        = System
      probableCause    = "Misconfiguration"
      operatorResponse = "Reconfigure the stage configuration in the Newport XPS motion controller and reboot it."
      autoAck          = false
      latched          = false
    }
    {
      name             = inconsistentSensorStatus
      description      = "Outputs from the hall sensor readout electronics are inconsistent."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Filter Exchanger Assembly (IRIS.imager.filter)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection or malfunction of hall sensors and/or their readout electronics"
      operatorResponse = "Make sure that all relevant cables are connected to the hall sensor readout electronics and the Newport XPS motion controller properly. Then, reboot this assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = stepout
      description      = "Step out of the stepper motor has been detected."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Filter Exchanger Assembly (IRIS.imager.filter)"
      alarmType        = Discrepancy
      probableCause    = "Wear-out of the mechanism."
      operatorResponse = "Re-datum the mechanism and report the issue to the instrument expert."
      autoAck          = false
      latched          = true
    }
    {
      name             = overheat
      description      = "Overheating detected"
      severityLevels   = [Major]
      location         = "IRIS Filter Exchanger Assembly (IRIS.imager.filter)"
      alarmType        = Absolute
      probableCause    = "Filter wheel(s) were moved too many times in a short period."
      operatorResponse = "Monitor the temperature and wait until it is cooled."
      autoAck          = false
      latched          = true
    }
  ]
}
