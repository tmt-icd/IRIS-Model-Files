subsystem = IRIS
component = imager.filter

publish {

  description = """
Telemetries published by IRIS Filter Assembly.
"""

#   events = [
#     {
#       name = current
#       description = "Current imager filter settings"
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = name
#           description  = """
# Current imager filter name. When two or more filters are inserted in the science light path, filter names are concatinated with __TBD__ character in the order of wheel number. This attribute becomes empty when any filter wheel is moving, or stopped in an intermediate position.

# When a dark plate, or two narrow band filters are inserted in the science light path, this string becomes 'dark'.

# When any filter is not inserted in the science light path, this string becomes 'through'.

# __TODO__: Define list of filter names.
# """
#           type = string
#         }
#         {
#           name = target
#           description  = """
# Demanded filter name.

# __TODO__: Define list of filter names.
# """
#           type = string
#         }
#         {
#           name = wavelength
#           description = """
# Current effective filter wavelength. Effective wavelength is defined as

# $ \frac{\int \lambda f(\lambda) q(\lambda) d \lambda}{\int f(\lambda) q(\lambda) d \lambda} $

# where _f_ is filter throughput and _q_ is quantum efficiency of the detector.

# __TODO__: Integrate mathjax or something similar to show the equation in Tex format above.

# __Discussion__: This information is required by the AOESW because the non-common path aberration correction is wavelength-dependent.
# """
#           type = double
#           units = microns
#         }
#         {
#           name = dark
#           description  = """
# Indicates whether a dark filter is inserted or not.
# """
#           type = boolean
#         }
#       ]
#     }
#     {
#       name = state
#       description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#             name = cmd
#             description  = "command state"
#             enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
#         }
#         {
#             name = move
#             description  = "state of mechanisms that can move"
#             enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
#         }
#         {
#             name = onTarget
#             description  = "state of mechanisms with respect to requested target position / configuration"
#             type = boolean
#         }
#         {
#             name = selection1
#             description = "Selected filter slot in the wheel #1."
#             enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
#         } 
#         {
#             name = selection2
#             description = "Selected filter slot in the wheel #2."
#             enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
#         } 
#         {
#             name = selection3
#             description = "Selected filter slot in the wheel #3."
#             enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
#         } 
#         {
#             name = selection4
#             description = "Selected filter slot in the wheel #4."
#             enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, INTERMEDIATE, UNKNOWN]
#         } 
#         {
#             name = selection5
#             description = "Selected filter slot in the wheel #5."
#             enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, INTERMEDIATE, UNKNOWN]
#         } 
#         {
#             name = debug
#             description  = "debug level"
#             enum = [TBD]
#         }
#         {
#             name = locked
#             description = "Indicates whether this assembly is locked. Any command that initiates motion will be rejected when locked."
#             type = boolean
#         }
#         {
#             name = interlock
#             description = "Indicates whether the motion is prohibited due to the interlock signal from Safety HCD."
#             type = boolean
#         }
#       ]
#     }
#     {
#       name = cmdStatus
#       description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#             name = command
#             description  = "Name of the most recent command."
#             type = string
#         }
#         {
#             name = args
#             description  = "String representation of the command arguments."
#             type = string
#         }
#         {
#             name = caller
#             description  = "String identifying the caller (if available)"
#             type = string
#         }
#         {
#             name = runID
#             description  = "A run ID associated with the command."
#             type = integer
#         }
#         {
#             name = ack
#             description  = "Initial acknowledgement"
#             enum = [ACCEPTED, REJECTED]
#         }
#         {
#             name = ackMsg
#             description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
#             type = string
#         }
#         {
#             name = completion
#             description  = "Status of completion"
#             enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
#         }
#         {
#             name = completionMsg
#             description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
#             type = string
#         }
#       ]
#     }
#     {
#       name = wheel1
#       description = "Status of wheel 1."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = position
#           description = "Current position name of this wheel."
#           enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
#           default = UNKNOWN
#         }
#         {
#           name = targetPosition
#           description = "Target position of filter mechanism."
#           enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
#         }
#         {
#           name = angle
#           description  = "Current rotation angle from the home position."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = targetAngle
#           description  = "Target rotation angle."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = switch
#           description = """
# Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

# Number of switches is __TBD__.
# """
#           type = array
#           items = {
#             type = boolean
#           }
#         }
#       ]
#     }
#     {
#       name = wheel2
#       description = "Status of wheel 2."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = position
#           description = "Current position name of this wheel."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
#           default = UNKNOWN
#         }
#         {
#           name = targetPosition
#           description = "Target position of filter mechanism."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
#         }
#         {
#           name = angle
#           description  = "Current rotation angle from the home position."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = targetAngle
#           description  = "Target rotation angle."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = switch
#           description = """
# Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

# Number of switches is __TBD__.
# """
#           type = array
#           items = {
#             type = boolean
#           }
#         }
#       ]
#     }
#     {
#       name = wheel3
#       description = "Status of wheel 3."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = position
#           description = "Current position name of this wheel."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
#           default = UNKNOWN
#         }
#         {
#           name = targetPosition
#           description = "Target position of filter mechanism."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
#         }
#         {
#           name = angle
#           description  = "Current rotation angle from the home position."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = targetAngle
#           description  = "Target rotation angle."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = switch
#           description = """
# Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

# Number of switches is __TBD__.
# """
#           type = array
#           items = {
#             type = boolean
#           }
#         }
#       ]
#     }
#     {
#       name = wheel4
#       description = "Status of wheel 4."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = position
#           description = "Current position name of this wheel."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
#           default = UNKNOWN
#         }
#         {
#           name = targetPosition
#           description = "Target position of filter mechanism."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
#         }
#         {
#           name = angle
#           description  = "Current rotation angle from the home position."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = targetAngle
#           description  = "Target rotation angle."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = switch
#           description = """
# Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

# Number of switches is __TBD__.
# """
#           type = array
#           items = {
#             type = boolean
#           }
#         }
#       ]
#     }
#     {
#       name = wheel5
#       description = "Status of wheel 5."
#       maxRate = 1
#       archive = true
#       archiveRate = 1
#       attributes = [
#         {
#           name = position
#           description = "Current position name of this wheel."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
#           default = UNKNOWN
#         }
#         {
#           name = targetPosition
#           description = "Target position of filter mechanism."
#           enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, HOME]
#         }
#         {
#           name = angle
#           description  = "Current rotation angle from the home position."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = targetAngle
#           description  = "Target rotation angle."
#           type = float
#           units = degree
#           minimum = 0
#           maximum = 360
#           exclusiveMinimum = false
#           exclusiveMaximum = true
#         }
#         {
#           name = switch
#           description = """
# Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

# Number of switches is __TBD__.
# """
#           type = array
#           items = {
#             type = boolean
#           }
#         }
#       ]
#     }
#   ]

  alarms = [
    {
      name             = watchdog
      description      = "This assembly has become unresponsive"
      severityLevels   = [Major]
      location         = "IRIS Imager Filter Assembly (IRIS.imager.filter)"
      alarmType        = System
      probableCause    = "Software bug"
      operatorResponse = "Restart the assembly and file a bug report."
      autoAck          = false
      latched          = true
    }
    {
      name             = incompatibleStageConfiguration
      description      = "The stage configuration in the Newport XPS motion controller is not compatible with this assembly."
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Imager Filter Assembly (IRIS.imager.filter)"
      alarmType        = System
      probableCause    = "Misconfiguration"
      operatorResponse = "Reconfigure the stage configuration in the Newport XPS motion controller and reboot it."
      autoAck          = false
      latched          = false
    }
    {
      name             = inconsistentSensorStatus
      description      = "hall sensor electronics outputs are inconsistent"
      severityLevels   = [Critical]
      location         = "IRIS Imager Filter Assembly (IRIS.imager.filter)"
      alarmType        = BitPattern
      probableCause    = "Cable disconnection or malfunction of hall sensors and/or their reading electronics"
      operatorResponse = "Make sure that all relevant cables are connected to the hall sensor reading electronics and the Newport XPS motion controller properly. Then, reboot this assembly."
      autoAck          = false
      latched          = true
    }
    {
      name             = stepout
      description      = "step-out of the stepper motor is detected"
      severityLevels   = [Warning, Major, Critical]
      location         = "IRIS Imager Filter Assembly (IRIS.imager.filter)"
      alarmType        = Discrepancy
      probableCause    = "Wear-out of the mechanism."
      operatorResponse = "Re-datum the mechanism and.report the issue to the instrument expert."
      autoAck          = false
      latched          = true
    }
  ]
}
