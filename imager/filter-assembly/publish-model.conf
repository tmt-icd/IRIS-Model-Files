subsystem = IRIS
component = sci-filter-assembly

publish {

  description = """
Telemetries published by IRIS Filter Assembly.
"""

  events = [
    {
      name = current
      description = "Current imager filter settings"
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = name
          description  = """
Current imager filter name. When two or more filters are inserted in the science light path, filter names are concatinated with __TBD__ character in the order of wheel number. This attribute becomes empty when any filter wheel is moving, or stopped in an intermediate position.

When a dark plate, or two narrow band filters are inserted in the science light path, this string becomes 'dark'.

When any filter is not inserted in the science light path, this string becomes 'through'.

__TODO__: Define list of filter names.
"""
          type = string
        }
        {
          name = target
          description  = """
Demanded filter name.

__TODO__: Define list of filter names.
"""
          type = string
        }
        {
          name = wavelength
          description = """
Current effective filter wavelength. Effective wavelength is defined as

$ \frac{\int \lambda f(\lambda) q(\lambda) d \lambda}{\int f(\lambda) q(\lambda) d \lambda} $

where _f_ is filter throughput and _q_ is quantum efficiency of the detector.

__TODO__: Integrate mathjax or something similar to show the equation in Tex format above.

__Discussion__: This information is required by the AOESW because the non-common path aberration correction is wavelength-dependent.
"""
          type = double
          units = microns
        }
        {
          name = dark
          description  = """
Indicates whether a dark filter is inserted or not.
"""
          type = boolean
        }
      ]
    }
    {
      name = state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = selection1
            description = "Selected filter slot in the wheel #1."
            enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection2
            description = "Selected filter slot in the wheel #2."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection3
            description = "Selected filter slot in the wheel #3."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection4
            description = "Selected filter slot in the wheel #4."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = selection5
            description = "Selected filter slot in the wheel #5."
            enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, INTERMEDIATE, UNKNOWN]
        } 
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
        {
            name = locked
            description = "Indicates whether this assembly is locked. Any command that initiates motion will be rejected when locked."
            type = boolean
        }
        {
            name = interlock
            description = "Indicates whether the motion is prohibited due to the interlock signal from Safety HCD."
            type = boolean
        }
      ]
    }
    {
      name = cmdStatus
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
    {
      name = wheel1
      description = "Status of wheel 1."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position name of this wheel."
          enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
        {
          name = targetPosition
          description = "Target position of filter mechanism."
          enum = [PV_LENS, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
        }
        {
          name = angle
          description  = "Current rotation angle from the home position."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = targetAngle
          description  = "Target rotation angle."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = switch
          description = """
Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

Number of switches is __TBD__.
"""
          type = array
          items = {
            type = boolean
          }
        }
      ]
    }
    {
      name = wheel2
      description = "Status of wheel 2."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position name of this wheel."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
        {
          name = targetPosition
          description = "Target position of filter mechanism."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
        }
        {
          name = angle
          description  = "Current rotation angle from the home position."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = targetAngle
          description  = "Target rotation angle."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = switch
          description = """
Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

Number of switches is __TBD__.
"""
          type = array
          items = {
            type = boolean
          }
        }
      ]
    }
    {
      name = wheel3
      description = "Status of wheel 3."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position name of this wheel."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
        {
          name = targetPosition
          description = "Target position of filter mechanism."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
        }
        {
          name = angle
          description  = "Current rotation angle from the home position."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = targetAngle
          description  = "Target rotation angle."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = switch
          description = """
Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

Number of switches is __TBD__.
"""
          type = array
          items = {
            type = boolean
          }
        }
      ]
    }
    {
      name = wheel4
      description = "Status of wheel 4."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position name of this wheel."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
        {
          name = targetPosition
          description = "Target position of filter mechanism."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH, HOME]
        }
        {
          name = angle
          description  = "Current rotation angle from the home position."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = targetAngle
          description  = "Target rotation angle."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = switch
          description = """
Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

Number of switches is __TBD__.
"""
          type = array
          items = {
            type = boolean
          }
        }
      ]
    }
    {
      name = wheel5
      description = "Status of wheel 5."
      maxRate = 1
      archive = true
      archiveRate = 1
      attributes = [
        {
          name = position
          description = "Current position name of this wheel."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, HOME, INTERMEDIATE, UNKNOWN]
          default = UNKNOWN
        }
        {
          name = targetPosition
          description = "Target position of filter mechanism."
          enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, DARK, THROUGH, HOME]
        }
        {
          name = angle
          description  = "Current rotation angle from the home position."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = targetAngle
          description  = "Target rotation angle."
          type = float
          units = degree
          minimum = 0
          maximum = 360
          exclusiveMinimum = false
          exclusiveMaximum = true
        }
        {
          name = switch
          description = """
Current status of switches on this wheel including home switch. These switches will be used to detect stepout, and not to determine the position. When a switch is not activated at an expected position, it is considered that stepout occured and 'stepout' attribute becomes TRUE.

Number of switches is __TBD__.
"""
          type = array
          items = {
            type = boolean
          }
        }
      ]
    }
  ]

  alarms = [
    {
      name = misstep
      description = """
Indicates a misstep of one (ore more) of the stepper motors.

The actual scheme to detect missteps is TBD. It is currently anticipated that the switches are deployed in a way that the current filter slot can be identified by checking the statuses of all switches in the filter wheel. It is currently planned that this assembly checks the statuses of all switches in the filter wheel when “select” command is completed, and raises this alarm when the switch statuses are not the same as the expected. It might be also possible to detect misstep by checking the torque value reported by Galil motion controller, but it is not sure if it is really feasible because we currently don’t know how Galil motion controller actually measures that.

When this alarm happens, the operator is expected to acknowledges this alarm and perform “datum” again. If this alarm is repeated many times, it indicates severe damage of the mechanisms and the observer is expected to report this problem to an instrument specialist.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = stall
      description = """
Indicates that one or more filter wheels do not respond, and Filter Assembly cannot insert some filters.

Note that the observer can ignore this alarm if she or he does not use the filters in the stalled filter wheel, but shall report this problem to an instrument specialist. The communication failure between Galil HCD and the motion controller would also trigger this alarm.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = severeStall
      description = """
Indicates that all filter wheels that equip with a dark filter are broken, and Filter Assembly cannot insert any dark filter.

When this alarm happens, the operator is expected to cut off any light into the detector, for example, by closing the shutter in NFIRAOS or rotating M3 to somewhere else. This is a severe stall and shall be reported to an instrument specialist.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = comFailure
      description = """
This alarm indicates the lost communication with the underlying Galil HCD.

If this alarm keeps raised, the observer may want to reboot this assembly, the Galil HCD, the host machines that run this assembly or the Galil HCD.

This alarm is NOT latched.
"""
      severity = minor
      archive = true
    }
    {
      name = unexpectedMotion
      description = """
This alarm is raised when Galil HCD reports any motion of filter wheels, but Filter Assembly does not expect it. This alarm is normally raised when Galil HCD is commanded not from Filter Assembly, but from, for example, engineering GUI directly.

When this alarm happens, the observer is expected to execute ‘stop’ command if the on-going motion is not what the observer expects. 

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = inconsistentStatus
      description = """
This alarm is raised when the statuses reported by Galil HCD are inconsistent with what this assembly currently expects. For example, the home switch may be turned on for some reason even if the stage is not moving and the current position is very far from the home position. It shouldn’t happen, but if it happens, this alarm is raised.

When this alarm happens, the observer is expected to check the statuses of this assembly. The observer can ignore this alarm and continue their observation if they think this alarm is not severe, but it is expected that the observer reports this issue to the instrument specialist after their observation. The observer may want to stop their observation when she or he finds this assembly behaving weirdly after this alarm, or if this alarm is repeatedly raised.

This alarm is latched.
"""
      severity = major
      archive = true
    }
    {
      name = overheating
      description = """
Whether the motion is prohibited due to overheating.

The observer is expected to check the temperature reading of the corresponding mechanism. Wait the temperature becomes lower than the threshold, or change the threshold if the temperature reading seems not indicate real temperature. It would happen when the temperature sensor comes off.

This alarm is latched.
"""
      severity = major
      archive = true
    }
  ]
}
