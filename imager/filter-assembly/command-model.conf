subsystem = IRIS
component = sci-filter-assembly

description = """
Commands which can be accepted by IRIS Filter Assembly.

This command model is based on the recommendation in "Software Design Patterns for Device and Component Controllers" which defines the standard sets of commands, and the command types (request or submit). The commands for component lifecycle defined in [OSW TN013 - Component Lifecycle Design and Implementation (TMT.SFT.TEC.15.006.REL04)](https://docushare.tmt.org/docushare/dsweb/Get/Document-46346/OSW%20TN013-ComponentLifecycleDesign_REL04.pdf) is classified as "lifecycle".
"""

receive = [
    {
        name = INITIALIZE
        description = """
This command loads the configuration of this assembly from Configuration Service or a local file ( __TBD__ ). It is accepted only when this assembly is in Loaded state. After successful completion of this command execution, this assembly will be staged in Initialized state. If it fails, this assembly will stay in Loaded state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

__TBD__: identify what configuration to be loaded

Command type: lifecycle
"""
    }
    {
        name = UNINITIALIZE
        description = """
This command stages this assembly in Loaded state from Initialized so that the initialization can be performed again after the configuration is changed. It does nothing other than that. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, nor does it trigger the communication with underlying HCDs.

Command type: lifecycle
"""
    }
    {
        name = STARTUP
        description = """
This command establishes connection to galil-hcd and power-assembly (or eaton-hcd), and turns on the motion controller if it is off. It is accepted only when this assembly is in Initialized state. After successful completion of this command execution, this assembly will be staged in Running state. If it fails, this assembly will stay in Initialized state.

This command never rotates any axis, but it excites all the motors to hold the current positions of all axes. If any motion is on-going, it is interrupted and stopped. It may affect the thermal condition inside the dewar.

Command type: lifecycle
"""
    }
    {
        name = SHUTDOWN
        description = """
This command cancels the on-going movement and stage this assembly in Initialized after the command execution succeeds. It is accepted in whatever states except * states (but including Running state). It does NOT turn off the motion controller.

Before going to Initialized state, stop commands to all three axes will be issued to make sure that all axes are stopped. After that, connection to relevant HCDs will be released so that the connection can be reestablished (TBC).

Command type: lifecycle
"""
    }
    {
        name = INIT
        description = """This command reloads configuration for the retraction axis without recycling the power of the motion controller. This command can be invoked only when the retraction axis is stopped.

Command type: request
"""
    }
    {
        name = TEST
        description = """This command executes a self-test for the retraction axis.

This command never moves the retraction axis.

__TBD__: Actual actions to be taken is TBD.

Command type: request
"""
    }
    {
        name = DATUM
        description = """
This command triggers datuming. It first performs homing, and then all filter wheels move to the predefined initial position.

__TBD__: The scheme for homing should be determined in order to prevent the detectors from being exposed to excessive light that may cause persistence.

Command type: submit
"""
    }
    {
        name = LOCK
        description = """
This command locks all 5 filter wheels. It is required for 'Warm Stow' and 'Stow' use cases defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx) to lock mechanisms before pumping or warming the dewer.

__TBD__: Actual actions to be taken is TBD.

Command type: submit
"""
    }
    {
        name = UNLOCK
        description = """
This command unlocks all 5 filter wheels.

This command is used to unlock the axes after cooling or pressurizing is completed. Unlock and index mechanisms should be done in 'Activate' and 'Warm Active' use cases as defined in [IRIS - Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx). To prevent from moving the filter wheels from moving by mistake, this command will not be accepted if the dewer is not in either Activate or Warm Activate stage.

__TBD__: Actual actions to be taken is TBD. This may do nothing.

Command type: submit
"""
    }
    {
        name = PARK
        description = """
This command inserts a blank plate first, and then move other filter wheels to the most common positions so that the next observation can be quickly started.

Command type: submit
"""
    }
    {
        name = MOVE
        description = """
This command changes filters. Actual behavior of this command depends on the current status and the requested filter. Typically, this command first inserts a blank plate in the bottom-most filter wheel which is closest to the detectors. Then, other 4 filter wheels are rotated to the specified position. Finally, the bottom-most filter wheel is rotated to a through hole position to remove the blank plate. If a filter in the bottom-most filter wheel is specified, two narrow band filters are inserted instead of the blank plate ( __TBC__ ). The actual behavior is determined to minimize the persistence on the detectors.

Command type: submit
"""
        args = [
            {
                name = filter1
                description = "Desired filter in wheel 1."
                enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH]
            }
            {
                name = filter2
                description = "Desired filter in wheel 2."
                enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH]
            }
            {
                name = filter3
                description = "Desired filter in wheel 3."
                enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH]    
            }
            {
                name = filter4
                description = "Desired filter in wheel 4."
                enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, TBD14, THROUGH]
            }
            {
                name = filter5
                description = "Desired filter in wheel 5."
                enum = [TBD1, TBD2, TBD3, TBD4, TBD5, TBD6, TBD7, TBD8, TBD9, TBD10, TBD11, TBD12, TBD13, BLANK, THROUGH]
            }
        ]
    }
    {
        name = STOP
        description = """
This command stops any on-going command execution or motion.

__TBD__: If this assembly cannot confirm all filter wheels are stopped within expected time (considering configured deceleration), the corresponding state variable becomes 'error'.

Command type: submit
"""
    }
]
