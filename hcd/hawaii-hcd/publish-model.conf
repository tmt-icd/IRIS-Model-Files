subsystem = IRIS
component = hcd.hawaii

publish {

  description = """
Events published by Hawaii HCD and the underlying native process (hawaii-cproc).
"""

  currentStates = [
    {
      name              = state
      description       = "Hawaii HCD state"
      attributes = [
        {
          name          = mode
          description   = "Operation mode"
          enum          = [FULL_FRAME, SUBARRAY, ODGW]
        }
        {
          name          = simulation
          description   = "indicates whether it is in the simulation mode"
          type          = boolean
        }
        {
          name          = cmd
          description   = "command state"
          enum          = [UNINITIALIZED,READY,BUSY]
        }
        {
          name          = runContextId
          description   = "Run Context ID"
          type          = integer
        }
      ]
    }
    {
      name              = stateCproc
      description       = "Status of hawaii-cproc."
      attributes = [
        {
          name              = running
          description       = "indicates whether hawaii-cproc is running."
          type              = boolean
        }
        {
          name              = pid
          description       = "PID of hawaii-cproc"
          type              = integer
        }
      ]
    }
    {
      name              = stateProxyForCproc
      description       = "Status of the connection with hawaii-cproc."
      attributes = [
        {
          name              = connection
          description       = "ZeroMQ connection state"
          enum              = [NotInitialized, Connecting, Connected, Disconnected]
        }
        {
          name              = pubSocket
          description       = "ZeroMQ socket for messages from Hawaii HCD to hawaii-cproc (e.g., tcp://127.0.0.1:50001)"
          type              = string
        }
        {
          name              = subSocket
          description       = "ZeroMQ socket for messages from hawaii-cproc to Hawaii HCD (e.g., tcp://127.0.0.1:50002)"
          type              = string
        }
      ]
    }
    {
      name              = scienceState
      description       = "science exposure status"
      archive           = true
      attributes = [
        {
          name          = exposure
          description   = "State of the science exposure"
          enum          = [STOP,ONGOING,WRITING_DATA]
        }
        {
          name          = ready
          description   = "Ready for the next exposure"
          type          = boolean
        }
      ]
    }
    {
      name              = odgwState
      description       = "ODGW exposure status"
      archive           = true
      attributes = [
        {
          name          = exposure
          description   = "State of the ODGW exposure"
          enum          = [STOP,CONTINUOUS]
        }
        {
          name          = ready
          description   = "Ready to start a continuous ODGW exposure"
          type          = boolean
        }
      ]
    }
    {
      name              = odgwPixelCompression
      description       = """
ODGW detector pixel compression coefficients.
    
The ODGW publishes a multiplicative (gain) factor (to be applied first), and a scalar offset (to be applied second) to convert from compressed 2-byte integer to floating point pixel values.

The coefficients will not change during a continuous ODGW exposure.

This assembly guarantees that the conversion from any 2-byte integer using IEEE 754 compliant arithmetic operations for binary32 will not result in NaN, Inf or -Inf.
"""
      requirements      = [ICD-NFIRAOS-IRIS-0785]
      archive           = true
      attributes = [
        {
          name          = gain
          description   = "integer to float scale factor"
          type          = float
        }
        {
          name          = offset
          description   = "integer to float offset"
          type          = float
        }
      ]
    }
  ]

  events = [
    {
      name              = rawScienceFrameWriteEnd
      description       = "Notifies that one raw science frame has been written to DRS."
      archive           = false
      attributes = [
        {
          name = path
          description = "Path to the written raw science frame."
          type = string
        }
      ]
    }
  ]

  observeEvents = [
    {
      name = readoutEnd
      description = """
This Observe Event indicates that a readout that is part of a ramp has completed.
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector name. IMG1, IMG2, IMG3, IMG4, IFS or PVC."
          type = string
        }
        {
          name = read
          description = "Read # of the readout within a ramp."
          type = integer
          minimum = 0
        }
        {
          name = ramp
          description = "Ramp # which the readout belongs to."
          type = integer
          minimum = 0
        }
        {
          name = obsId
          description = "Observation ID which the exposure belongs to."
          type = string
        }
      ]
    }
    {
      name = readoutFailed
      description = """
This Observe Event indicates that a readout that is part of a ramp has failed indicating transfer failure or some other issue.
"""
      archive = true
      attributes = [
        {
          name = detector
          description = "Detector name. IMG1, IMG2, IMG3, IMG4, IFS or PVC."
          type = string
        }
        {
          name = read
          description = "Read number of the failed readout within a ramp."
          type = integer
          minimum = 0
        }
        {
          name = ramp
          description = "Ramp number which the readout failure belongs to."
          type = integer
          minimum = 0
        }
        {
          name = obsId
          description = "Observation ID which the failed readout belongs to."
          type = string
        }
      ]
    }
    {
      name = dataWriteStart
      description = """
This Observe Event indicates that hawaii-cproc has started writing a raw science frame to DMS. This event is published only for the IRIS PVC.
"""
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = fileId
          description = "File ID of the data file that is being written."
          type = string
        }
      ]
    }
    {
      name = dataWriteEnd
      description = """
This Observe Event indicates that hawaii-cproc has finished writing a raw science frame to DMS. This event is published only for the IRIS PVC.
"""
      archive = true
      attributes = [
        {
          name = obsId
          description = "Observation ID which the current exposure belongs to."
          type = string
        }
        {
          name = fileId
          description = "File ID of the data file that is being written or transferred."
          type = string
        }
      ]
    }
  ]
}
