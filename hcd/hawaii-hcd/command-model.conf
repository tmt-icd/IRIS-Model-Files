subsystem = IRIS
component = hcd.hawaii

receive = [
  {
    name            = init
    description     = "reinitialize this HCD"
    completionType  = longRunning
    preconditions   = ["state.cmd == READY"]
    postconditions  = ["state.cmd == READY &&",
                       "state.mode == FULL_FRAME &&",
                       "cprocState.running == true &&",
                       "proxyState == Connected &&",
                       "scienceState.exposure == STOP &&",
                       "scienceState.loaded == false &&",
                       "odgwState.exposure == STOP &&",
                       "odgwState.loaded == false"]
    requirements    = [REQ-3-IRIS.IMG-3430, REQ-3-IRIS.IFS-0340]
  }
  {
    name            = test
    description     = "check connections to hawaii-cproc, the detector controller and DRS/DMS"
    completionType  = immediate
    requirements    = [REQ-3-IRIS.IFS-2410]
  }
  {
    name            = enableODGW
    description     = "Enable ODGW mode."
    completionType  = immediate
    preconditions   = ["(state.mode == FULL_FRAME || state.mode == SUBARRAY) &&",
                       "scienceState.exposure == STOP &&",
                       "odgwState.exposure == STOP"]
    postconditions  = ["state.mode == ODGW &&",
                       "scienceState.exposure == STOP &&",
                       "odgwState.exposure == STOP &&",
                       "scienceState.loaded == false &&",
                       "odgwState.loaded == false"]
  }
  {
    name            = disableODGW
    description     = "Disable ODGW mode."
    completionType  = immediate
    preconditions   = ["state.mode == ODGW &&", 
                       "scienceState.exposure == STOP &&",
                       "odgwState.exposure == STOP"]
    postconditions  = ["state.mode == FULL_FRAME &&",
                       "scienceState.exposure == STOP &&",
                       "odgwState.exposure == STOP &&",
                       "scienceState.loaded == false",
                       "odgwState.loaded == false"]
  }
  {
    name            = odgwCalConfig
    description     = "Set the calibration files for the image processing of ODGW."
    completionType  = longRunning
    preconditions   = ["odgwState.exposure == STOP"]
    postconditions  = ["odgwState.exposure == STOP"]
    args            = [
      {
        name        = flat
        description = "Flat-field filename for ODGW"
        type        = string
      }
      {
        name        = dark
        description = "Dark filename for ODGW"
        type        = string
      }
    ]
  }
  {
    name            = odgwInitAcquisitionTable
    description     = """
Set the ODGW acquisition table.

TODO: Allow the user to select the ODGW sampling mode (i.e., fast, UTR, MCDS).
"""
    completionType  = longRunning
    requiredArgs    = [table]
    preconditions   = ["state.mode == ODGW &&",
                       "odgwState.exposure == STOP"]
    postconditions  = ["state.mode == ODGW &&",
                       "odgwState.exposure == STOP &&",
                       "odgwState.loaded == true"]
    args            = [
      {
        name        = table
        description = "Acquisition table encoded as string"
        type        = string
      }
    ]
  }
  {
    name            = odgwTableJump
    description     = "Jump to the specified row of the ODGW acquisition table."
    completionType  = longRunning
    preconditions   = ["state.mode == ODGW &&",
                       "odgwState.exposure == CONTINUOUS"]
    postconditions  = ["state.mode == ODGW &&",
                       "odgwState.exposure == CONTINUOUS"]
    requiredArgs    = [row]
    args            = [
      {
        name        = row
        description = "Row to jump."
        type        = integer
        minimum     = 0
      }
    ]
  }
  {
    name            = odgwStart
    description     = "Start a continuous ODGW exposure."
    completionType  = immediate
    preconditions   = ["state.mode == ODGW &&",
                       "odgwState.exposure == STOP &&",
                       "odgwState.loaded == true"]
    postconditions  = ["state.mode == ODGW &&",
                       "odgwState.exposure == CONTINUOUS &&",
                       "odgwState.loaded == true"]
  }
  {
    name            = odgwStop
    description     = "Stop the ongoing continuous ODGW exposure."
    completionType  = longRunning
    preconditions   = ["state.mode == ODGW &&",
                       "odgwState.exposure == CONTINUOUS &&",
                       "odgwState.loaded == true"]
    postconditions  = ["state.mode == ODGW &&",
                       "odgwState.exposure == STOP &&",
                       "odgwState.loaded == true"]
  }
  {
    name            = scienceLoadConfiguration
    description     = "Load configuration of the upcoming science exposure(s)."
    completionType  = longRunning
    preconditions   = ["scienceState.exposure == STOP || scienceState.exposure == WRITING_DATA"]
    postconditions  = ["(scienceState.exposure == STOP || scienceState.exposure == WRITING_DATA) &&",
                       "scienceState.loaded == true"]
    args            = [
      {
        name        = readouts
        description = "Number of full frame readouts per ramp."
        type        = integer
        minimum     = 2
        default     = 2
      }
      {
        name        = ramps
        description = "Number of ramps for the full frame in one exposure."
        type        = integer
        minimum     = 1
        default     = 1
      }
      {
        name        = sampling
        description = "Sampling method for the full frame"
        enum        = [MCDS, UTR]
        default     = UTR
      }
      {
        name        = coadd
        description = "Number of coadds for MCDS for the full frame. If it is one, the sampling mode is effectively the same as CDS."
        type        = integer
        minimum     = 1
        default     = 1
      }
      {
        name        = subarray
        description = """
Subarray configuration. One element for one subarray. No overlap is allowed among subarrays. This parameter is not allowed in the ODGW mode.

TODO: determine how to specify the reset and readout interval of each subarray.
"""
        type        = array
        minItems    = 0
        maxItems    = 99
        items       = {
          type = struct
          parameters = [
            {
              name        = x
              description = "X location of the subarray."
              units       = pixel
              type        = integer
              minimum     = 0
              maximum     = 4095
            }
            {
              name        = y
              description = "Y location of the subarray."
              units       = pixel
              type        = integer
              minimum     = 0
              maximum     = 4095
            }
            {
              name        = size
              description = "Size (width and height) of the subarray."
              units       = pixel
              type        = integer
              minimum     = 4
              maximum     = 256
            }
            {
              name        = sampling
              description = "Sampling method for this subarray."
              enum        = [MCDS, UTR]
              default     = UTR
            }
            {
              name        = coadd
              description = "Number of coadds for MCDS for this subarray. If it is one, the sampling mode is effectively the same as CDS."
              type        = integer
              minimum     = 1
              default     = 1
            }
          ]
        }
      }
    ]
  }
  {
    name            = scienceExposure
    description     = "Start a science exposure. This command will not return until the exposure is completed."
    completionType  = longRunning
    preconditions   = ["scienceState.loaded == true &&",
                       "(state.mode != ODGW || odgwState.exposure == CONTINUOUS) &&",
                       "(scienceState.exposure == STOP || scienceState.exposure == WRITING_DATA)"]
    postconditions  = ["scienceState.loaded == true &&",
                       "(state.mode != ODGW || odgwState.exposure == CONTINUOUS) &&",
                       "(scienceState.exposure == STOP || scienceState.exposure == WRITING_DATA)"]
    args            = [
      {
        name        = obsId
        description = "Observation ID. If not given, the exposure ID is replaced by the UTC time."
        type        = string
      }
      {
        name        = exposureNumber
        description = "Exposure number."
        type        = integer
        minimum     = 1
        maximum     = 9999
        default     = 1
      }
    ]
  }
  {
    name            = scienceAbortExposure
    description     = "Abort the ongoing science exposure."
    completionType  = longRunning
    preconditions   = ["scienceState.loaded == true &&",
                       "(state.mode != ODGW || odgwState.exposure == CONTINUOUS) &&",
                       "scienceState.exposure == ONGOING"]
    postconditions  = ["scienceState.loaded == true &&",
                       "(state.mode != ODGW || odgwState.exposure == CONTINUOUS) &&",
                       "(scienceState.exposure == STOP || scienceState.exposure == WRITING_DATA)"]
  }
]
