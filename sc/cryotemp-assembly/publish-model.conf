subsystem = IRIS
component = cryotemp-assembly

publish {
	telemetry = [
    	{
    	name = "sensor"
    	description = "Telemetry of the temperature sensor"
      	archive = true
      	maxRate = 1
    	attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group this sensor belongs to."
    		enum = [IMG, IFS]
    		}
    		{
    		name = "sensorID"
    		description = "Temperature sensor ID of the hardware"
		    type = string
		    }
    		{
    		name = "location"
    		description = "Location description of the temperature sensor"
		    type = string
    		}
    		{
    		name = "unit"
    		description = "Temperature unit"
		    enum = [K, C, Sensor, Linear] 
		    default = K
    		}
    		{
    		name = "reading"
    		description = "Temperature reading according to the unit"
    		type = float
    		}
    		{
    		name = "sensorreadingstatus"
    		description  = "Bit weighting of sensor status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
    		type = integer
    		default = 0
    		}
    		{
    		name = "highalarmstatus"
    		description = "Alarm status for highest value"
    		type = boolean
    		default = false
    		}
    		{
    		name = "lowalarmstatus"
    		description = "Alarm status for lowest value"
    		type = boolean
    		default = false
    		}
    		{
    		name = "min"
    		description = "Minimum temperature during current session"
    		type = float
    		}
    		{
    		name = "max"
    		description = "Maximum temperature during current session"
    		type = float
    		}
    		{
    		name = "minmaxstatus"
    		description  = "Bit weighting of min/max status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
			type = array
			dimensions = [2]
            items = {
                    type = integer
                    minimum = 0
                    maximum = 512
            		}    		
    		}
    	]
    	}
    	{
    	name = "controlloop"
	    	description = "Telemetry of the heater control loop"
	      	archive = true
	      	maxRate = 1
    		attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group this control loop belongs to."
    		enum = [IMG, IFS]
    		}
    		{
    		name = "loopID"
    		description = "Control loop ID of the hardware"
    		type = string
    		}
    		{
    		name = "setpoint"
    		description  = "current setpoint of control loop."
    		type = float
    		}
    		{
    		name = "heater_range"
    		description = "heater range. The power of the heater is decided by heater resistance, heater range, and maximum current."
    		type = integer
    		minimum = 1
    		maximum = 5
    		default = 1
    		}
    		{
    		name = "input"
    		description  = "Input this loop to control from."
    		enum = [A, B]    		
    		}
    		{
    		name = "units"
    		description  = "Setpoint unit"
    		enum = [K, C, Sensor]
    		}
    		{
    		name = "enabled"
    		description = "On/Off flag of this control loop."
    		type = boolean
    		default = false
    		}
    		{
    		name = "powerup_enable"
    		description  = "Flag specifying whether the control loop is on or off after power up."
    		type = boolean
    		default = false
    		}
    		{
    		name = "filterEnabled"
    		description = "On/Off flag of this control loop filter. It uses the same filter window and number of filter points as input."
    		type = boolean
    		default = false
    		}
    		{
    		name = "mode"
    		description  = "Control loop PID mode. 1 = Manual PID, 2 = Zone, 3 = Open Loop, 4 = Autotune PID, 5 = AutoTune PI, 6 = AutoTune P"
    		type = integer
    		minimum = 1
    		maximum = 6
    		}
    		{
    		name = "pid"
    		description  = "PID values for this control loop"
    		type = array
    		dimensions = [3]
    		items = {
                type = integer
                }    		
    		}    		
    		{
    		name = "rampEnabled"
    		description = "On/Off flag of the ramp control"
    		type = boolean
    		default = false
    		}
    		{
    		name = "ramp_value"
    		description  = "How many kelvin per minute to ramp the setpoint"
    		type = float
    		}
    	]
    	}
    	{
    	name = "heater_output"
    	description = "Telemetry of the heater output"
	    archive = true
	    maxRate = 1
    	attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group this heater belongs to."
    		enum = [IMG, IFS]
    		}
    		{
    		name = "output"
    		description = "Heater output in percent"
    		type = float
    		}
    		{
    		name = "status"
    		description = "Errorcode in heater output"
    		type = integer
    		minimum = 0
    		maximum = 6
    		}
		]
    	}
    	{
      	name = "status"
      	description = "Overall status of tepmerature assembly."
      	maxRate = 1
      	archive = true
      	attributes = [
       	 	{
	  		name = unlockAllowed
	  		description = """
				Indicats if mechanisms and detectors can be unlocked.

				__TBD__: Consider whether this is really needed.
			"""
	  		type = boolean
	 		default = false
        	}
      	]
    	}
    	{
    	name = "alarm_config"
    	description = "Alarm configuration set for the hardware"
    	maxRate = 1
    	archive = true
    	attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group's hardware this config will be applied"
    		enum = [IMG, IFS]
    		}
    		{
    		name = "input"
    		description = "Input channel to set alarm form"
    		type = string
    		}
    		{
    		name = "enabled"
    		description  = "On/Off flag for this alarm"
    		type = boolean
    		default = false
    		}
    		{
    		name = "unit"
    		description = "unit of the this alarm setting"
    		enum = [K, C, Sensor, Linear]
    		default = K
    		}
    		{
    		name = "highvalue"
    		description = "Upper limit for the input"
    		type = float
    		}
    		{
    		name = "lowvalue"
    		description = "Lower limit for the input"
    		type = float
    		}
    		{
    		name = "latchenable"
    		description = "On/Off flag for latch arlarm"
    		type = boolean
    		default = false
    		}
    		{
    		name = "relay"
    		description = "Onf/Off flag for how the activated alrarm affects relays."
    		type = boolean
    		default = false
    		}
    	]	
    	}
    	{
    	name = "filter_config"
    	description = "Filter configuration set for the hardware"
    	maxRate = 1
    	archive = true
    	attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group's hardware this config will be applied"
    		enum = [IMG, IFS]
    		}
    		{
    		name = "input"
    		description = "Input channel to configure this filter"
    		type = string
    		}
    		{
    		name = "enabled"
    		description  = "On/Off flag for this filter"
			type = boolean
    		}
    		{
    		name = "points"
    		description  = "Number of data points the filtering function uses."
    		type = integer
    		default = 0
    		}
    		{
    		name = "window"
    		description = "Percent of full scale reading which limits the filtering function. Reading change greater than this percentage reset the filter."
    		type = float
    		default = 0
    		}
    	]
    	}
    	{
    	name = "input_config"
    	description = "Input configuration set for the hardware"
    	maxRate = 1
    	archive = true
    	attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group's hardware this config will be applied"
    		enum = [IMG, IFS]
    		}
    		{
    		name = "input"
    		description = "Input of this configuration"
    		type = string
    		}
    		{
    		name = "enabled"
    		description = "On/Off flag for enabling the reading on the input"
    		type = boolean
    		default = true
    		}
    		{
    		name = "compensation"
    		description = "Compensation configuration for this input. 0 = off, 1 = on, 2 = pause. It is only valid with NTC resistor or special."
    		type = integer
    		minimum = 0
    		maximum = 2    		
    		}
    		{
    		name = "curve"
    		description = "Curve number of the curve that input uses. if not matched with the input, it defaults to 0."
    		type = integer
    		minimum = 0
    		maximum = 60
    		}
    		{
    		name = "type"
    		description = "Input sensor type"
    		type = integer
    		minimum = 0
    		maximum = 12
    		}
    		{
    		name = "unit"
    		description = "Input sensor unit. It is predetermined value based on type. If it is specified, type changes to 0 = special"
    		type = integer
    		minimum = 1
    		maximum = 2
    		}
    		{
    		name = "coefficient"
    		description = "Input coefficient. It is predetermined value based on type. If it is specified, type changes to 0 = special."
    		type = integer
    		minimum = 1
    		maximum = 2
    		}
    		{
    		name = "excitation"
    		description = "Input excitation. It is predetermined value based on type. If it is specified, type changes to 0 = special."
    		type = integer
    		minimum = 0
    		maximum = 12
    		}
    		{
    		name = "range"
    		description = "Input range. It is predetermined value based on type. If it is specified, type changes to 0 = special."
    		type = integer
    		minimum = 1
    		maximum = 13
    		}
    	]
    	}
    	{
    	name = "controlLoopLimit_config"
    	description = "Control lopp limit configuration set for the hardware"
    	maxRate = 1
    	archive = true
    		attributes = [
    		{
    		name = "functionalgroup"
    		description = "Indicator which functional group's hardware this config will be applied"
    		enum = [IMG, IFS]
    		}
    		{
    		name = "loopID"
    		description = "Control loop ID of the hardware"
    		type = string
    		}
    		{
    		name = "setpointlimit"
    		description = "Limit of what reading the loop turns off output."
    		type = float
    		}
    		{
    		name = "positiveslope"
    		description = "maximum positive change in output"
    		type = float
    		}
    		{
    		name = "negativeslope"
    		description = "maximum negative change in output"
    		type = float
    		}
    		{
    		name = "maxcurrent"
    		description = "maximum current for loop 1 heater output."
    		type = float
    		}
    		{
    		name = "maxrange"
    		description = "maximum loop 1 heater range"
    		type = integer
    		minimum = 0
    		maximum = 5
    		}
    	]
    	}
    ]
    alarms = [
		{
			name = exceedMinimumAlarm
			description = "This alarm is activated when the temperature of the science dewar reaches or exceeds the minimum pressure allowed."
			severity = major
			archive = true
		}
		{
			name = approachingMinimumAlarm
			description = "This alarm is activated when the temperature of the science dewar approaches the minimum pressure allowed by set amount."
			severity = minor
			archive = true
		}
		{
			name = approachingMaximumAlarm 
			description = "This alarm is activated when the temperature of the science dewar approaches the maximum pressure allowed by set amount."
			severity = minor
			archive = true
		}
		{
			name = exceedMaximumAlalrm
			description = "This alarm is activated when the temperature of the science dewar reaches or exceeds the maximum pressure allowed."
			severity = major 
			archive = true
		}
		{
			name = approachingMaxGradientAlarm
			description = "This alarm is activated when the temperature gradient approaches to the maximum gradient allowed."
			severity = minor 
			archive = true
		}
		{
			name = exceedMaxGradientAlarm 
			description = "This alarm is activated when the temperature gradient reaches or exceeds the maximum gradient allowed."
			severity = major
			archive = true
		}
	]
}    	