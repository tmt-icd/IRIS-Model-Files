subsystem = IRIS
component = cryotemp-assembly

description = "IRIS cryotemp assembly Commands."

receive = [
    {
   		name = INITIALIZE
    	description = "Read configurations. Initialize assembly but does not affect hardware."
    }
    {
    	name = DATUM
    	description = "Prepare/configure hardwares."
    }
	{
 		name = START
   		description  = "Start polling. Calling this command while already polling will update polling rate."
   		args = [
		{		
    		name = rateInSeconds
    		description  = "The polling rate of this assembly in seconds."
    		type = integer
    		units = "seconds"
    		minimum = 1
    		default = 360
    	}
    	]
    }
    {
    	name = STOP
    	description = "Stop polling"
    }
    {
    	name = TEST
    	description = "Test communications to the hardwares."
	}
	{
    	name = IMG_INITIALIZE
    	description = "Read configuration. Initialize Lakeshore device assigned for imager but does not affect hardware."
    }
    {
    	name = IMG_DATUM
    	description = "Prepare/configure Lakeshore device assigned for imager hardware."
    }
	{
 		name = IMG_START
   		description  = "Start polling. Calling this command while already polling will update polling rate."
   		args = [
		{		
	    	name = rateInSeconds
	    	description  = "The polling rate of this functional group in seconds."
	    	type = integer
	    	units = "seconds"
	    	minimum = 1
	    	default = 360
    	}
    	]
    }
    {
	    name = IMG_STOP
	    description = "Stop polling"
    }
    {
	    name = IMG_TEST
	    description = "Test communications to the Lakeshore device assigned for imager."
	}
	{
    	name = IFS_INITIALIZE
    	description = "Read configuration. Initialize Lakeshore device assigned for IFS but does not affect hardware."
    }
    {
    	name = IFS_DATUM
    	description = "Prepare/configure Lakeshore device assigned for IFS."
    }
	{
 		name = IFS_START
   		description  = "Start polling. Calling this command while already polling will update polling rate."
   		args = [
		{		
	    	name = rateInSeconds
	    	description  = "The polling rate of this functional group in seconds."
	    	type = integer
	    	units = "seconds"
	    	minimum = 1
	    	default = 360
    	}
    	]
    }
    {
	    name = IFS_STOP
	    description = "Stop polling"
    }
    {
	    name = IFS_TEST
	    description = "Test communications to the Lakeshore device assigned for IFS."
	}
	{
    	name = MONITOR_INITIALIZE
    	description = "Read configuration. Initialize Lakeshore devices assigned for monitoring but does not affect hardware."
    }
    {
    	name = MONITOR_DATUM
    	description = "Prepare/configure Lakeshore devices assigned for monitoring."
    }
	{
 		name = MONITOR_START
   		description  = "Start polling. Calling this command while already polling will update polling rate."
   		args = [
		{		
	    	name = rateInSeconds
	    	description  = "The polling rate of this functional group in seconds."
	    	type = integer
	    	units = "seconds"
	    	minimum = 1
	    	default = 360
    	}
    	]
    }
    {
	    name = MONITOR_STOP
	    description = "Stop polling"
    }
    {
	    name = MONITOR_TEST
	    description = "Test communications to the Lakeshore devices assigned for monitoring."
	}
    {
    name = setTemperature
    description = "Sets target temperature for specific output."
    args = [
    	{
    	name = functionalGroup
    	description = "Which functional group (HCD) to send this command to"
    	enum = [IMG, IFS]
    	}
    	{
    	name = loop
    	description = "The control loop to set target temperature for."
    	type = string
    	}
    	{
    	name = targetTemperature
    	description = "The target temperature for the output"
    	type = number
    	}
	]
    }
]
