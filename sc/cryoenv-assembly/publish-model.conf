subsystem = IRIS
component = sc.cryoenv

publish {
	
	events = [
		{
	    	name 			= state
		    description     = The current overall state of Cryostat Environment assembly
      		maxRate 		= 1
			archive = true
      		attributes = [
      			{
		          	name          = cmd
		          	description   = command state
		          	enum          = [UNINITIALIZED,READY,BUSY,CONTINUOUS]
		        }
		        {
		          	name          = thermalVacuumState
		          	description   = thermal-vacuum state
		          	enum          = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
		        }
		        {
		          	name          = debug
		          	description   = debug level
		          	enum          = [DEBUG,INFO, WARN, ERROR]
		        }
				{
					name		 = oiwfsConnected
					description = 
				}
      		]
    	}
    	{
	    	name 			= IMG_state
		    description     = IMG functional group state
      		ref				= state
    	}
		{	name 			= "IMGTMP[XX]"
		    description     = IMG functional group temperature reading with key information
      		maxRate 		= 20
			archive 		= true
      		attributes 		= [
				{
		          	name          = location
		          	description   = Physical location of the sensor assigned for the temperature reading
		          	type          = string
		        }
		        {
		          	name          = reading
		          	description   = Temperature reading of the sensor in kelvin
		          	type          = double
         			units = K

		        }
			]
		}
		{
	    	name 			= "IMGSENSOR[XX]"
		    description     = IMG functional group temperature sensor status detail
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
      			{
		          	name          = sensorID
		          	description   = "ID of the sensor assigned for the temperature reading"
		          	type		  = string
		        }
				{
		    		name = unit
		    		description = Temperature unit
				    enum = [K, C, Sensor, Linear] 
	    		}
	    		{
		    		name = "sensorreadingstatus"
		    		description  = "Bit weighting of sensor status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
		    		type = integer
		    		default = 0
	    		}
	    		{
		    		name = "highalarmstatus"
		    		description = "Alarm status for highest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "lowalarmstatus"
		    		description = "Alarm status for lowest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "min"
		    		description = "Minimum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "max"
		    		description = "Maximum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "minmaxstatus"
		    		description  = "Bit weighting of min/max status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
					type = array
					dimensions = [2]
		            items = {
		                    type = integer
		                    minimum = 0
		                    maximum = 512
		            }    		
	    		}
      		]
    	}
		{
    		name = "IMG_HTR"
	    	description = "Telemetry of the heater control loop"
	      	archive = true
    		attributes = [
	    		{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
	    		{
		    		name = "loopID"
		    		description = "Control loop ID of the hardware"
		    		type = string
	    		}
	    		{
		    		name = "setpoint"
		    		description  = "current setpoint of control loop."
		    		type = float
	    		}
	    		{
		    		name = "heater_range"
		    		description = "heater range. The power of the heater is decided by heater resistance, heater range, and maximum current."
		    		type = integer
		    		minimum = 1
		    		maximum = 5
		    		default = 1
	    		}
	    		{
		    		name = "input"
		    		description  = "Input this loop to control from."
		    		enum = [A, B]    		
	    		}
	    		{
		    		name = "units"
		    		description  = "Setpoint unit"
		    		enum = [K, C, Sensor]
	    		}
	    		{
		    		name = "enabled"
		    		description = "On/Off flag of this control loop."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "powerup_enable"
		    		description  = "Flag specifying whether the control loop is on or off after power up."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "filterEnabled"
		    		description = "On/Off flag of this control loop filter. It uses the same filter window and number of filter points as input."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "mode"
		    		description  = "Control loop PID mode. 1 = Manual PID, 2 = Zone, 3 = Open Loop, 4 = Autotune PID, 5 = AutoTune PI, 6 = AutoTune P"
		    		type = integer
		    		minimum = 1
		    		maximum = 6
	    		}
	    		{
		    		name = "pid"
		    		description  = "PID values for this control loop"
		    		type = array
		    		dimensions = [3]
		    		items = {
		                type = integer
		            }    		
	    		}    		
	    		{
		    		name = "rampEnabled"
		    		description = "On/Off flag of the ramp control"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "ramp_value"
		    		description  = "How many kelvin per minute to ramp the setpoint"
		    		type = float
	    		}
	    		{
		    		name = "output"
		    		description = "Heater output in percent"
		    		type = float
	    		}
	    		{
		    		name = "status"
		    		description = "Errorcode in heater output"
		    		type = integer
		    		minimum = 0
		    		maximum = 6
	    		}
    		]
    	}
		{
	    	name 			= "IFS_STATE"
		    description     = "IFS functional group state" 
      		ref				= state
    	}
		{
	    	name 			= "WIN_STATE"
		    description     = "WIN functional group state" 
      		ref				= state
    	}
		{
	    	name 			= "PV_STATE"
		    description     = "PV functional group state" 
      		ref				= state
    	}
    	
    	{
	    	name 			= "IFSTEMP[XX]"
		    description     = "IFS functional group temperature reading" 
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
      			{
		          	name          = sensorID
		          	description   = "ID of the sensor assigned for the temperature reading"
		          	type		  = string
		        }
		        {
		          	name          = location
		          	description   = "Physical location of the sensor assigned for the temperature reading"
		          	type          = string
		        }
		        {
		          	name          = reading
		          	description   = "Temperature reading of the sensor in kelvin"
		          	type          = double
		        }
		        {
		    		name = "unit"
		    		description = "Temperature unit"
				    enum = [K, C, Sensor, Linear] 
				    default = K
	    		}
	    		{
		    		name = "sensorreadingstatus"
		    		description  = "Bit weighting of sensor status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
		    		type = integer
		    		default = 0
	    		}
	    		{
		    		name = "highalarmstatus"
		    		description = "Alarm status for highest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "lowalarmstatus"
		    		description = "Alarm status for lowest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "min"
		    		description = "Minimum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "max"
		    		description = "Maximum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "minmaxstatus"
		    		description  = "Bit weighting of min/max status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
					type = array
					dimensions = [2]
		            items = {
		                    type = integer
		                    minimum = 0
		                    maximum = 512
		            }    		
	    		}
      		]
    	}
    	{
    		name = "IFS_HTR"
	    	description = "Telemetry of the heater control loop"
	      	archive = true
	      	maxRate = 1
    		attributes = [
	    		{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
	    		{
		    		name = "loopID"
		    		description = "Control loop ID of the hardware"
		    		type = string
	    		}
	    		{
		    		name = "setpoint"
		    		description  = "current setpoint of control loop."
		    		type = float
	    		}
	    		{
		    		name = "heater_range"
		    		description = "heater range. The power of the heater is decided by heater resistance, heater range, and maximum current."
		    		type = integer
		    		minimum = 1
		    		maximum = 5
		    		default = 1
	    		}
	    		{
		    		name = "input"
		    		description  = "Input this loop to control from."
		    		enum = [A, B]    		
	    		}
	    		{
		    		name = "units"
		    		description  = "Setpoint unit"
		    		enum = [K, C, Sensor]
	    		}
	    		{
		    		name = "enabled"
		    		description = "On/Off flag of this control loop."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "powerup_enable"
		    		description  = "Flag specifying whether the control loop is on or off after power up."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "filterEnabled"
		    		description = "On/Off flag of this control loop filter. It uses the same filter window and number of filter points as input."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "mode"
		    		description  = "Control loop PID mode. 1 = Manual PID, 2 = Zone, 3 = Open Loop, 4 = Autotune PID, 5 = AutoTune PI, 6 = AutoTune P"
		    		type = integer
		    		minimum = 1
		    		maximum = 6
	    		}
	    		{
		    		name = "pid"
		    		description  = "PID values for this control loop"
		    		type = array
		    		dimensions = [3]
		    		items = {
		                type = integer
		            }    		
	    		}    		
	    		{
		    		name = "rampEnabled"
		    		description = "On/Off flag of the ramp control"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "ramp_value"
		    		description  = "How many kelvin per minute to ramp the setpoint"
		    		type = float
	    		}
	    		{
		    		name = "output"
		    		description = "Heater output in percent"
		    		type = float
	    		}
	    		{
		    		name = "status"
		    		description = "Errorcode in heater output"
		    		type = integer
		    		minimum = 0
		    		maximum = 6
	    		}
    		]
    	}
    	{
	    	name 			= "WIN_TEMP[XX]"
		    description     = "WIN functional group temperature reading" 
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
      			{
		          	name          = sensorID
		          	description   = "ID of the sensor assigned for the temperature reading"
		          	type		  = string
		        }
		        {
		          	name          = location
		          	description   = "Physical location of the sensor assigned for the temperature reading"
		          	type          = string
		        }
		        {
		          	name          = reading
		          	description   = "Temperature reading of the sensor in kelvin"
		          	type          = double
		        }
		        {
		    		name = "unit"
		    		description = "Temperature unit"
				    enum = [K, C, Sensor, Linear] 
				    default = K
	    		}
	    		{
		    		name = "sensorreadingstatus"
		    		description  = "Bit weighting of sensor status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
		    		type = integer
		    		default = 0
	    		}
	    		{
		    		name = "highalarmstatus"
		    		description = "Alarm status for highest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "lowalarmstatus"
		    		description = "Alarm status for lowest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "min"
		    		description = "Minimum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "max"
		    		description = "Maximum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "minmaxstatus"
		    		description  = "Bit weighting of min/max status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
					type = array
					dimensions = [2]
		            items = {
		                    type = integer
		                    minimum = 0
		                    maximum = 512
		            }    		
	    		}
      		]
    	}
    	{
    		name = "WIN_HTR"
	    	description = "Telemetry of the heater control loop"
	      	archive = true
	      	maxRate = 1
    		attributes = [
	    		{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
	    		{
		    		name = "loopID"
		    		description = "Control loop ID of the hardware"
		    		type = string
	    		}
	    		{
		    		name = "setpoint"
		    		description  = "current setpoint of control loop."
		    		type = float
	    		}
	    		{
		    		name = "heater_range"
		    		description = "heater range. The power of the heater is decided by heater resistance, heater range, and maximum current."
		    		type = integer
		    		minimum = 1
		    		maximum = 5
		    		default = 1
	    		}
	    		{
		    		name = "input"
		    		description  = "Input this loop to control from."
		    		enum = [A, B]    		
	    		}
	    		{
		    		name = "units"
		    		description  = "Setpoint unit"
		    		enum = [K, C, Sensor]
	    		}
	    		{
		    		name = "enabled"
		    		description = "On/Off flag of this control loop."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "powerup_enable"
		    		description  = "Flag specifying whether the control loop is on or off after power up."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "filterEnabled"
		    		description = "On/Off flag of this control loop filter. It uses the same filter window and number of filter points as input."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "mode"
		    		description  = "Control loop PID mode. 1 = Manual PID, 2 = Zone, 3 = Open Loop, 4 = Autotune PID, 5 = AutoTune PI, 6 = AutoTune P"
		    		type = integer
		    		minimum = 1
		    		maximum = 6
	    		}
	    		{
		    		name = "pid"
		    		description  = "PID values for this control loop"
		    		type = array
		    		dimensions = [3]
		    		items = {
		                type = integer
		            }    		
	    		}    		
	    		{
		    		name = "rampEnabled"
		    		description = "On/Off flag of the ramp control"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "ramp_value"
		    		description  = "How many kelvin per minute to ramp the setpoint"
		    		type = float
	    		}
	    		{
		    		name = "output"
		    		description = "Heater output in percent"
		    		type = float
	    		}
	    		{
		    		name = "status"
		    		description = "Errorcode in heater output"
		    		type = integer
		    		minimum = 0
		    		maximum = 6
	    		}
    		]
    	}
    	{
	    	name 			= "PV_TEMP[N]"
		    description     = "PV functional temperature reading" 
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
      			{
		          	name          = sensorID
		          	description   = "ID of the sensor assigned for the temperature reading"
		          	type		  = string
		        }
		        {
		          	name          = location
		          	description   = "Physical location of the sensor assigned for the temperature reading"
		          	type          = string
		        }
		        {
		          	name          = reading
		          	description   = "Temperature reading of the sensor in kelvin"
		          	type          = double
		        }
		        {
		    		name = "unit"
		    		description = "Temperature unit"
				    enum = [K, C, Sensor, Linear] 
				    default = K
	    		}
	    		{
		    		name = "sensorreadingstatus"
		    		description  = "Bit weighting of sensor status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
		    		type = integer
		    		default = 0
	    		}
	    		{
		    		name = "highalarmstatus"
		    		description = "Alarm status for highest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "lowalarmstatus"
		    		description = "Alarm status for lowest value"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "min"
		    		description = "Minimum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "max"
		    		description = "Maximum temperature during current session"
		    		type = float
	    		}
	    		{
		    		name = "minmaxstatus"
		    		description  = "Bit weighting of min/max status flags. 1=invalid reading, 2=old reading, 16=temp underrange, 32=temp overrange, 64=units zero, 128= units overrarnge"
					type = array
					dimensions = [2]
		            items = {
		                    type = integer
		                    minimum = 0
		                    maximum = 512
		            }    		
	    		}
      		]
    	}
    	{
    		name = "PV_HTR"
	    	description = "Telemetry of the heater control loop"
	      	archive = true
	      	maxRate = 1
    		attributes = [
	    		{
		          	name          = lakeshoreID
		          	description   = "ID of the Lakeshore device that this reading is from"
		          	type		  = string
		        }
	    		{
		    		name = "loopID"
		    		description = "Control loop ID of the hardware"
		    		type = string
	    		}
	    		{
		    		name = "setpoint"
		    		description  = "current setpoint of control loop."
		    		type = float
	    		}
	    		{
		    		name = "heater_range"
		    		description = "heater range. The power of the heater is decided by heater resistance, heater range, and maximum current."
		    		type = integer
		    		minimum = 1
		    		maximum = 5
		    		default = 1
	    		}
	    		{
		    		name = "input"
		    		description  = "Input this loop to control from."
		    		enum = [A, B]    		
	    		}
	    		{
		    		name = "units"
		    		description  = "Setpoint unit"
		    		enum = [K, C, Sensor]
	    		}
	    		{
		    		name = "enabled"
		    		description = "On/Off flag of this control loop."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "powerup_enable"
		    		description  = "Flag specifying whether the control loop is on or off after power up."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "filterEnabled"
		    		description = "On/Off flag of this control loop filter. It uses the same filter window and number of filter points as input."
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "mode"
		    		description  = "Control loop PID mode. 1 = Manual PID, 2 = Zone, 3 = Open Loop, 4 = Autotune PID, 5 = AutoTune PI, 6 = AutoTune P"
		    		type = integer
		    		minimum = 1
		    		maximum = 6
	    		}
	    		{
		    		name = "pid"
		    		description  = "PID values for this control loop"
		    		type = array
		    		dimensions = [3]
		    		items = {
		                type = integer
		            }    		
	    		}    		
	    		{
		    		name = "rampEnabled"
		    		description = "On/Off flag of the ramp control"
		    		type = boolean
		    		default = false
	    		}
	    		{
		    		name = "ramp_value"
		    		description  = "How many kelvin per minute to ramp the setpoint"
		    		type = float
	    		}
	    		{
		    		name = "output"
		    		description = "Heater output in percent"
		    		type = float
	    		}
	    		{
		    		name = "status"
		    		description = "Errorcode in heater output"
		    		type = integer
		    		minimum = 0
		    		maximum = 6
	    		}
    		]
    	}
    	{
	    	name 			= "PRESS_STATE"
		    description     = "PRESS functional group state" 
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = cmdState
		          	description   = "command state"
		          	enum          = [UNINITIALIZED,READY]
		        }
		        {
		          	name          = thermalVacuumState
		          	description   = "thermal-vacuum state"
		          	enum          = [WARM, PUMPING, WARM_VACUUM, COOLING, COLD, WARMING, PRESSURIZING]
		        }
		        {
		          	name          = debug
		          	description   = "debug level"
		          	enum          = [TBD1,TBD2]
		        }
      		]
    	}
    	{
	    	name 			= "PESSURE"
		    description     = "Telemetry for the pressure of the cryostat." 
      		maxRate 		= 20
      		attributes = [
      			{
		          	name          = gaugeID
		          	description   = "command state"
		          	type		  = string
		        }
		        {
		          	name          = unit
		          	description   = "Pressure unit"
		          	enum          = [atm, torr, pascal]
		        }
		        {
		          	name          = reading
		          	description   = "Pressure reading from the gauge specified."
		          	type		  = float
		        }
      		]
    	}
	]
	   	
    alarms = [
		{
			name = TEMPERATURE
			description = "Alarm when the temperature is out of range for current thermal-vacuum state."
			// TODO FIXME: The fields below were automatically added and should be updated manually
			severityLevels = [Major]
			location = "TBD..."
			alarmType = Calculated
			probableCause = "TBD..."
			operatorResponse = "TBD..."
			autoAck = false
			latched = false
		}
		{
			name = TEMPERATURE_GRADIENT
			description = "alarm when the temperature rate of change is greater than as configured."
			// TODO FIXME: The fields below were automatically added and should be updated manually
			severityLevels = [Major]
			location = "TBD..."
			alarmType = Calculated
			probableCause = "TBD..."
			operatorResponse = "TBD..."
			autoAck = false
			latched = false
		}
		{
			name = PRESSURE 
			description = "Alarm when the pressure is out of range for current thermal-vacuum state."
			// TODO FIXME: The fields below were automatically added and should be updated manually
			severityLevels = [Major]
			location = "TBD..."
			alarmType = Calculated
			probableCause = "TBD..."
			operatorResponse = "TBD..."
			autoAck = false
			latched = false
		}
		{
			name = PRESSURE_GRADIENT
			description = "alarm when the temperature rate of change is greater than as configured."
			// TODO FIXME: The fields below were automatically added and should be updated manually
			severityLevels = [Major]
			location = "TBD..."
			alarmType = Calculated
			probableCause = "TBD..."
			operatorResponse = "TBD..."
			autoAck = false
			latched = false
		}
		{
			name = LOST_CONNECTION
			description = "Alarm when it's unable to communicate with one or more HCDs."
			// TODO FIXME: The fields below were automatically added and should be updated manually
			severityLevels = [Major]
			location = "TBD..."
			alarmType = Calculated
			probableCause = "TBD..."
			operatorResponse = "TBD..."
			autoAck = false
			latched = false
		}
	]
}    	