subsystem = IRIS
component = ifs.scale

publish {
	events = [
		{
			name = scale
	    	description = "IFS Scale"
	    	maxRate = 1
	    	archive = true

	    	attributes = [
	    		{
	    			name = current
	    			description  = "Current IFS scale"
	    			enum = [INTERMEDIATE, UNKNOWN, 4, 9, 25, 50]
	    			default = 4
	    			units = mas
	    		}
	    		{
	    			name = target
	    			description  = "Current IFS scale"
	    			enum = [INTERMEDIATE, UNKNOWN, 4, 9, 25, 50]
	    			default = 4
	    			units = mas
	    		}
	    	]
    	}
    	{
    		name = IFSmode
    		description = "Current IFS mode determined by scale and resolution."
    		maxRate = 1
    		archive = true
    		attributes = [
    			{
	    			name = mode
	    			description = "Current IFS mode"
	    			enum = [lenslet, slicer]
    			}
    		]
    			
    	}
    	{
	    	name = pickoffMirrorMech
	    	description = "Slicer Pickoff Mirror Mechanism Telemetry"
	    	maxRate = 1
	    	archive = true

	    	attributes = [
	    		{
	    			name = position
	    			description = "Current position name of pickoff mirror mechanism."
	    			enum =[IN, OUT]
	    			default = OUT 
	    		}
	    		{
	    			name = rawPosition
	    			description  = "Current raw position of pickoff mirror mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = switch
	    			description = "Current switch value of pickoff mirror mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = positionNumber
	    			description  = "Current position number of pickoff mirror mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = targetPosition
	    			description = "Target position name of pickoff mirror mechanism."
	    			enum =[IN, OUT]
	    			default = OUT 
	    		}
	    		{
	    			name = targetRawPosition
	    			description  = "Target raw position of pickoff mirror mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = targetSwitch
	    			description = "Switch value at target position for pickoff mirror mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = targetPositionNumber
	    			description  = "Target position number of pickoff mirror mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = status
	    			description  = "Current status of pickoff mirror mechanism"
	    			type = string
	    		}
	    	]
	    }
    	{
	    	name = periscopeMirrorMech
	    	description = "Periscope Mirror Mechanism Telemetry"
	    	maxRate = 1
	    	archive = true

	    	attributes = [
	    		{
	    			name = position
	    			description = "Current position name of periscope mirror mechanism."
	    			enum =[IN, OUT]
	    			default = OUT 
	    		}
	    		{
	    			name = rawPosition
	    			description  = "Current raw position of periscope mirror mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = switch
	    			description = "Current switch value of periscope mirror mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = positionNumber
	    			description  = "Current position number of periscope mirror mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = targetPosition
	    			description = "Target position name of periscope mirror mechanism."
	    			enum =[IN, OUT]
	    			default = OUT 
	    		}
	    		{
	    			name = targetRawPosition
	    			description  = "Target raw position of periscope mirror mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = targetSwitch
	    			description = "Switch value at target position for periscope mirror mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = targetPositionNumber
	    			description  = "Target position number of periscope mirror mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = status
	    			description  = "Current status of periscope mirror mechanism"
	    			type = string
	    		}
	    	]
	    }
	    {
	    	name = firstopticsmech
	    	description = "Telemetry item for the first optics mechanism which controls all four scales, 4, 9, 25, and 50 mas"
	    	maxRate = 1
	    	archive = true

	    	attributes = [
	    		{
	    			name = position
	    			description = "Current position name of first optics mechanism."
	    			enum =[TBD1, TBD2]
	    			default = TBD1 
	    		}
	    		{
	    			name = rawPosition
	    			description  = "Current raw position of first optics mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = switch
	    			description = "Current switch value of first optics mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = positionNumber
	    			description  = "Current position number of first optics mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = targetPosition
	    			description = "Target position name of first optics mechanism."
	    			enum =[TBD1, TBD2]
	    			default = TBD1 
	    		}
	    		{
	    			name = targetRawPosition
	    			description  = "Target raw position of first optics mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = targetSwitch
	    			description = "Switch value at target position for first optics mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = targetPositionNumber
	    			description  = "Target position number of first optics mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = status
	    			description  = "Current status of first optics mechanism"
	    			type = string
	    			default = UNKNOWN
	    		}
	    	]
	    }
	    {
	    	name = secondopticsmech
	    	description = "Telemetry item for the seconds optics mechanism which controls scales of 25 and 50 mas together with first optics mechanism"
	    	maxRate = 1
	    	archive = true

	    	attributes = [
	    		{
	    			name = position
	    			description = "Current position name of second optics mechanism."
	    			enum =[TBD1, TBD2]
	    			default = TBD1 
	    		}
	    		{
	    			name = rawPosition
	    			description  = "Current raw position of second optics mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = switch
	    			description = "Current switch value of second optics mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = positionNumber
	    			description  = "Current position number of second optics mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = targetPosition
	    			description = "Target position name of second optics mechanism."
	    			enum =[TBD1, TBD2]
	    			default = TBD1 
	    		}
	    		{
	    			name = targetRawPosition
	    			description  = "Target raw position of second optics mechanism."
	    			type = integer
	    			units = counts 
	    			minimum = 0
	    		}
	    		{
	    			name = targetSwitch
	    			description = "Switch value at target position for second optics mechanism." 
	    			type = integer
	    			minimum = 0
	    		}
	    		{
	    			name = targetPositionNumber
	    			description  = "Target position number of second optics mechanism."
	    			type = integer
	    			minimum = 0 
	    		}
	    		{
	    			name = status
	    			description  = "Current status of second optics mechanism"
	    			type = string
	    			default = UNKNOWN
	    		}
	    	]
	    }
    {
      name = state
      description = "Standard assembly state as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true

      attributes = [
        {
            name = cmd
            description  = "command state"
            enum = [UNINITIALIZED, READY, BUSY, COTINUOUS]
        }
        {
            name = move
            description  = "state of mechanisms that can move"
            enum = [UNINDEXED, INDEXING, INDEXED, MOVING]
        }
        {
            name = onTarget
            description  = "state of mechanisms with respect to requested target position / configuration"
            type = boolean
        }
        {
            name = debug
            description  = "debug level"
            enum = [TBD]
        }
        {
            name = locked
            description = "Indicates whether this assembly is locked. Any command that initiates motion will be rejected when locked."
            type = boolean
        }
        {
            name = interlock
            description = "Indicates whether the motion is prohibited due to the interlock signal from Safety HCD."
            type = boolean
        }
      ]
    }
    {
      name = cmdStatus
      description = "Standard assembly command status as defiend in [Technical Document: Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_REL01.pdf)."
      maxRate = 1
      archive = true

      attributes = [
        {
            name = command
            description  = "Name of the most recent command."
            type = string
        }
        {
            name = args
            description  = "String representation of the command arguments."
            type = string
        }
        {
            name = caller
            description  = "String identifying the caller (if available)"
            type = string
        }
        {
            name = runID
            description  = "A run ID associated with the command."
            type = integer
        }
        {
            name = ack
            description  = "Initial acknowledgement"
            enum = [ACCEPTED, REJECTED]
        }
        {
            name = ackMsg
            description  = "Acknowledgement string explaining why a command is REJECTED. This string will generally be cleared if the command is ACCEPTED."
            type = string
        }
        {
            name = completion
            description  = "Status of completion"
            enum = [INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED]
        }
        {
            name = completionMsg
            description  = "The message string is cleared when a command has been successfully acknowledged and/or is INPROGRESS. The message string is filled in if the command fails."
            type = string
        }
      ]
    }
	]
	alarms = [
	{
		name = pickoffMirror_Stall
		description = "This alarm is activated when a severe stall is detected. The actual scheme to detect the stall and its resolution are TBD."
		// TODO FIXME: The fields below were automatically added and should be updated manually
		severityLevels = [Major]
		location = "TBD..."
		alarmType = Calculated
		probableCause = "TBD..."
		operatorResponse = "TBD..."
		autoAck = false
		latched = false
	}
	{
		name = periscopeMirror_Stall
		description = "This alarm is activated when a severe stall is detected. The actual scheme to detect the stall and its resolution are TBD."
		// TODO FIXME: The fields below were automatically added and should be updated manually
		severityLevels = [Major]
		location = "TBD..."
		alarmType = Calculated
		probableCause = "TBD..."
		operatorResponse = "TBD..."
		autoAck = false
		latched = false
	}
	{
		name = firstOptics_Stall
		description = "This alarm is activated when a severe stall is detected. The actual scheme to detect the stall and its resolution are TBD."
		// TODO FIXME: The fields below were automatically added and should be updated manually
		severityLevels = [Major]
		location = "TBD..."
		alarmType = Calculated
		probableCause = "TBD..."
		operatorResponse = "TBD..."
		autoAck = false
		latched = false
	}
	{
		name = secondOptics_Stall
		description = "This alarm is activated when a severe stall is detected. The actual scheme to detect the stall and its resolution are TBD."
		// TODO FIXME: The fields below were automatically added and should be updated manually
		severityLevels = [Major]
		location = "TBD..."
		alarmType = Calculated
		probableCause = "TBD..."
		operatorResponse = "TBD..."
		autoAck = false
		latched = false
	}
	]
}
