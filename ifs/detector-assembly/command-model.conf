subsystem = IRIS
component = ifs-detector-assembly

description = """
IFS Detector Assembly Commands.

"""

receive = [
    {
        name = START_EXPOSURE
        description = "This command starts a new exposure with the given cofinguration."
        requiredArgs = [obsId, reads, subregion]
        args = [
            {
                name = obsId
                description = "Observation ID given by ObserveConfigArg structure as stated in [TMT Software Detailed Design (TMT.SFT.TEC.15.002.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-49912/TMTSoftwareDesign-CSWPD_REL01.pdf)."
                type = string
            }
            {
                name = channels
                description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64."
                enum = [1, 4, 16, 32, 64]
                default = 64
            }
            {
                name = resets
                description = "Number of resets in one ramp."
                type = integer
                minimum = 1
                default = 1
            }
            {
                name = reads
                description = "Number of reads in one group."
                type = integer
                minimum = 1
            }
            {
                name = ramps
                description = "Number of ramps in one exposure."
                type = integer
                minimum = 1
                default = 1
            }
            {
                name = subregion
                description = """
Subregion definition. the first index specifies either left-bottom-most point or right-top-most point (0 => left-bottom-most, 1 => right-top-most) and the second index specifies x or y (0 => x, 1 => y). The coordinate is 0-based including reference pixel.

__DISCUSSION__: How do we handle reference pixels? Or, do we need to provide a way to specify subregion for scienc exposure?
"""
                type = array
                dimensions = [2,2]
                items = {
                    type = integer
                    minimum = 0
                    maximum = 4095
                }
                units = pixel
            }
        ]
    }
    {
        name = ABORT_EXPOSURE
        description = "This command aborts the current exposure."
    }
    {
        name = LOCK
        description = """
This command locks detector from starting detector clocking and taking exposures. This command will be used in Warm Stow use case as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx).

__DISCUSSION__: How can we technically lock the detector? One possible approach is to turn off detector controller.
"""
    }
    {
        name = UNLOCK
        description = """
This command unlocks detector so that the detector can be powered up. This command will be used in Activate and Warm Activate use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx).
"""
    }
    {
        name = POWER_ON
        description = "This command turns on power of detector. This command will be used in Warm Stow use case as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
    }
    {
        name = POWER_OFF
        description = "This command turns off power of detector. This command will be used in Activate and Warm Activate use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
    }
]
