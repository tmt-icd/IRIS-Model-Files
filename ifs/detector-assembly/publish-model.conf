subsystem = IRIS
component = ifs-detector-assembly

publish {
    telemetry = [
    {
	    name = systemConf
            description = """
Current detector system configuration which is rarely changed every exposure, but which could be changed at engineering, commissioning or maintenance. This configuration will be updated when DATUM command is issued.
"""
	    maxRate = 1
	    archive = true
        archiveRate = 1
	    attributes = [
	    	{
	    	    name = detectorName
	    	    description = "Serial number of IFS detector name."
	    	    type = string	    	    
	    	}
	    	{
	    	    name = gain
	    	    description = "Convsersion of photoelectrons to counts"
	    	    type = float
	    	    units = e-/ADU
	    	    
	    	}
	    	{
	    	    name = readNoise
	    	    description = "IFS detector read noise."
	    	    type = float
	    	    units = e-
	    	    
	    	}
	    	{
	    		name = pixelClockingTime
	    		description = "Time for IFS detector to clock a pixel"
	    		type = float
	    		units = ms
	    	}
            {
                name = resetLevel
                description = "Reset level of each detector."
                type = float
                units = TBD
            }
            {
                name = channels
                description  = "Number of channels. The possible numbers are 1, 4, 16, 32, 64."
                type = integer
                minimum = 1
                maximum = 64
                default = 64
                units = channels
            }
            {
                name = versionDSP
                description = "Version number of downloaded DSP code in Leach controller."
                type = string
            }
            {
                name = versionDriver
                description = "Version number of Linux driver for Leach controller."
                type = string
            }
            {
                name = versionAPI
                description = "Version number of ARC API."
                type = string
            }
            {
	    		name = readoutTime
	    		description = "Time to clock entire IFS detector. which is dependent on pixel clocking time and sub-array dimensions and channels used."
	    		type = float
	    		units = ms
	    	}
	    ]
	}
	{
	    name = currentConfig
	    description = "Configuration of exposure in progress or last completed"
	    minRate = 1
	    maxRate = 1
	    archive = true
	    archiveRate = 1
	    attributes = [
           {
               name = obsId
               description = "Observation ID given by START_EXPOSURE command."
               type = string
            }
            {
                name = exposureNumber
                description = "The exposure # within the observation given by START_EXPOSURE command."
                type = integer
                minimum = 0
                maximum = 99999
            }
            {
                name = targetTotalTime
                description = "Requested total exposure time which is _targetRampIntegrationTime_ multiplied by _ramps_."
                type = float
                units = ms
                minimum = 0
            }
			{
	    	    name = totalTime
	    	    description  = "Actual total exposure time which is _rampIntegrationTime_ multiplied by _ramps_."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
 			{
	    	    name = targetRampIntergrationTime
	    	    description  = "Requested integration time of one ramp which is given by START_EXPOSURE command."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
			{
	    	    name = rampIntergrationTime
                description  = "Actual integration time of one ramp. The reuqested integration time is rounded down to the nearest valid integration time which is a multiple of _readoutTime_."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
			{
	    	    name = reads
	    	    description = "Number of reads in one ramp. This value is calculated from the requested integration time for one ramp."
	    	    type = integer
	    	    minimum = 1
                maximum = 100000
	    	    default = 1
	    	}
	    	{
	    	    name = ramps
	    	    description = "Number of ramps in one exposure which is given by START_EXPOSURE command."
	    	    type = integer
	    	    minimum = 1
                maximum = 100000
	    	    default = 1
	    	}
	    	{
	    	    name = subregionStartX
	    	    description = "Leftmost column(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 0
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionStartY
	    	    description = "Bottommost row(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 0
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionEndX
	    	    description = "Rightmost column(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 4095
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionEndY
	    	    description = "Topmost row(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 4095
	    	    units = pixel
	    	}
	    ]
    	}
    	{
	    name = nextConfig
	    description = "Configuration of next exposure to be taken"
	    minRate = 1
	    maxRate = 1
	    archive = true
	    archiveRate = 1
	    attributes = [
           {
               name = obsId
               description = "Observation ID given by START_EXPOSURE command."
               type = string
            }
            {
                name = exposureNumber
                description = "The exposure # within the observation given by START_EXPOSURE command."
                type = integer
                minimum = 0
            }
            {
                name = targetTotalTime
                description = "Requested total exposure time which is _targetRampIntegrationTime_ multiplied by _ramps_."
                type = float
                units = ms
                minimum = 0
            }
			{
	    	    name = totalTime
	    	    description  = "Actual total exposure time which is _rampIntegrationTime_ multiplied by _ramps_."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
 			{
	    	    name = targetRampIntergrationTime
	    	    description  = "Requested integration time of one ramp which is given by START_EXPOSURE command."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
			{
	    	    name = rampIntegrationTime
                description  = "Actual integration time of one ramp. The reuqested integration time is rounded down to the nearest valid integration time which is a multiple of _readoutTime_."
	    	    type = float
	    	    minimum = 0 
	    	    units = ms
			}
			{
	    	    name = reads
	    	    description = "Number of reads in one ramp. This value is calculated from the requested integration time for one ramp."
	    	    type = integer
	    	    minimum = 1
                maximum = 100000
	    	    default = 1
	    	}
	    	{
	    	    name = ramps
	    	    description = "Number of ramps in one exposure which is given by START_EXPOSURE command."
	    	    type = integer
	    	    minimum = 1
                maximum = 100000
	    	    default = 1
	    	}
	    	{
	    	    name = subregionStartX
	    	    description = "Leftmost column(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 0
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionStartY
	    	    description = "Bottommost row(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 0
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionEndX
	    	    description = "Rightmost column(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 4095
	    	    units = pixel
	    	}
	    	{
	    	    name = subregionEndY
	    	    description = "Topmost row(0-based) pixel of subregion."
	    	    type = integer
	    	    minimum = 0
	    	    maximum = 4095
	    	    default = 4095
	    	    units = pixel
	    	}
	    ]
    }
	{
	    name = status
	    maxRate = 1
	    archive = true
	    archiveRate = 1
	    attributes = [
                {
		    name = status
		    description = "Overall status of system."
		    type = string
                default = UNKNOWN
		    
                }
                {
		    name = detectorStatus
		    description = """
Status of each detector.

* __OFF__      : The detector power is off.
* __BOOTING__  : Powering on the detector.
* __IDLING__   : The detector is idling.
* __EXPOSURE__ : The detector is taking an exposure.
* __SHUTDOWN__ : powering off the detector.
* __UKNOWN__   : Unknown state

"""
		    enum = [OFF, BOOTING, IDLING, EXPOSURE, SHUTDOWN, UNKNOWN]
                default = UNKNOWN
                }
	    ]
        }
        {
            name = power
            description = "This telemetry tells if the detector is powered off and locked.  This telemetry will be used in Start Warming and Start Pumping use cases as mentioned in [IRIS Software Design Document (TMT.INS.PDD.14.024.DRF07)](https://docushare.tmt.org/docushare/dsweb/Get/Document-32613/160210_IRIS_SDD_DRF07.docx)."
            maxRate = 1
            archive = true
            archiveRate = 1
            attributes = [
                {
                    name = off
                    description = "This attribute becomes TRUE when the detector is powered off."
                    type = boolean
                    default = FALSE
                }
                {
                    name = locked
                    description = "This attribute becomes TRUE when the detector is locked."
                    type = boolean
                    default = FALSE
                }
            ]       
        }
	{
	    name = flags
	    minRate = 1
	    maxRate = 1
	    archive = true
	    archiveRate = 1
	    attributes = [
	    	{
	    	    name = isAborted
	    	    description = "Flag for whether exposure in progress or last completed exposure has been aborted"
	    	    type = boolean
	    	default = FALSE
	    	}
	    	{
	    	    name = abortInProgress
	    	    description = "Flag for whether exposure in progress is currently being aborted"
	    	    type = boolean
	    	default = FALSE
	    	}
	    	{
	    	    name = exposureInProgress
	    	    description = "Flag for whether exposure is in progress"
	    	    type = boolean
	    	default = FALSE
	    	}
	    ]
	}
	{
	    name = counts
	    minRate = 1
	    maxRate = 1
	    archive = true
	    archiveRate = 1
	    attributes = [
	    	{
	    	    name = readsDone
	    	    description = "Number of reads completed for exposure in progress or last completed"
	    	    type = integer
	    	    minimum = 0
                maximum = 100000
	    	default = 0
	    	}
	    	{
	    	    name = rampsDone
	    	    description = "Number of ramps completed for exposure in progress or last completed"
	    	    type = integer
	    	    minimum = 0
                maximum = 100000
	    	default = 0
	    	}
	    ]
	}
    ]
    events = [
        {
	    name = startExposure
	    description = "This event notifies that a new exposure started."
	    archive = true
	    attributes = [
                {
		    name = exposure
		    description = "Exposure # within the observation."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = obsId
		    description = "Observation ID which the current exposure belongs to."
		    type = string
		    minimum = 0
                }
	    ]
        }
        {
	    name = readoutCompleted
	    description = "This event notifies that one readout is saved to DSK-DRS so that DRS can start processing the readout on the disk."
	    archive = true
	    attributes = [
                {
		    name = read
		    description = "Read # of the readout."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = ramp
		    description = "Ramp # which the readout belongs to."
		    type = integer
            minimum = 0
            maximum = 99999
                }
                {
            name = integrationTime
            description = "integration time of each readout."
            type = float
            units = ms
            minimum = 0
                }
                {
		    name = exposure
		    description = "Exposure # within the observation."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = obsId
		    description = "Observation ID which the exposure belongs to."
		    type = string
                }
	    ]
        }
        {
	    name = endExposure
	    description = "This event notifies that an exposure is finished."
	    archive = true
	    attributes = [
                {
		    name = exposure
		    description = "Exposure # within the observation."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = obsId
		    description = "Observation ID which the current exposure belongs to."
		    type = string
		    minimum = 0
                }
	    ]
        }
        {
	    name = aborting
	    description = "This event notifies that this assembly starts to try aborting the current exposure. When the abort is completed, the corresponding 'aborted' event will be sent. If the exposure successfully finishes before aborting, 'endExposure' event will be sent."
	    archive = true
	    attributes = [
                {
		    name = exposure
		    description = "Exposure # within the observation."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = obsId
		    description = "Observation ID which the current exposure belongs to."
		    type = string
                }
                {
		    name = reason
		    description = """
Trigger of this abort event. Meaning of each enum value is as below:

* COMMAND : ABORT_EXPOSURE command is received.
* DISK    : There is an error when writing readout data to disk storage (e.g. disk storage is full, connection to the disk storage is lost).
* DC      : Detector controller encounters an error.
* UNKNOWN : Unknown reason.

"""
		    enum = [COMMAND, DISK, DC, UNKNOWN]
                }
                {
		    name = detail
		    description = "More detailed reason why the exposure is aborted if the trigger is some error."
		    type = string
                }
	    ]
        }
        {
	    name = aborted
	    description = "This event notifies that the current exposure was aborted."
	    archive = true
	    attributes = [
                {
		    name = exposure
		    description = "Exposure # within the observation."
		    type = integer
		    minimum = 0
            maximum = 99999
                }
                {
		    name = obsId
		    description = "Observation ID which the current exposure belongs to."
		    type = string
                }
                {
		    name = reason
		    description = """
Trigger of this abort event. Meaning of each enum value is as below:

* COMMAND : ABORT_EXPOSURE command is received.
* DISK    : There is an error when writing readout data to disk storage (e.g. disk storage is full, connection to the disk storage is lost).
* DC      : Detector controller encounters an error.
* UNKNOWN : Unknown reason.

"""
		    enum = [COMMAND, DISK, DC, UNKNOWN]
                }
                {
		    name = detail
		    description = "More detailed reason why the exposure is aborted if the trigger is some error."
		    type = string
                }
	    ]
        }

    ]	
}
