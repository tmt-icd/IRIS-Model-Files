subsystem = IRIS
component = drs-assembly

publish {
    events = [

        {
            name = state
            description = "This state attribute represents the state of the DRS with respect to command handling"
            attributes = [
                {
                        name = cmd
                        description = """
This is the command handling state which can be:
•       UNITITIALIZED: the assembly is not properly initialized. Generally the only command that will be accepted in the state is [GROUP_]init.
•       READY: the assembly is ready to accept commands and is not processing / executing a command, and any ‘following’ background operations are not active.
•       BUSY: the assembly is currently processing / executing a command (any command). Generally only some commands will be accepted while in this state.
•       CONTINUOUS: The assembly has accepted a continuous-type (follow) command and the assembly is currently still in the continuous mode (i.e. taking continuous action or periodic action, e.g. follow mode or tracking). This state is somewhere between ready and busy. Generally only some commands will be accepted while in this state.

        Note that a REJECTED command does not change the cmd state
"""
                       enum = [UNITITIALIZED, READY, BUSY, CONTINUOUS]
                }
             ]
        }




        {
            name = cmdStatus 
            description = "Status of the most recent command."
            attributes = [
                {
                        name =  command
                        description = "Name of the most recent command processed by the command handler"
                        type = string
                }
                {
                        name = args 
                        description = "String representation of the command arguments."
                        type = string
                }
                {
                        name =  caller
                        description = "Identified of the caller (if available)"
                        type = string
                }
                {
                        name = runId 
                        description = "Run ID associated with the command"
                        type = integer
                        minimum = 0
                }
                {
                        name =  ack
                        description = "Initial command acknowledgement: ACCEPTED | REJECTED. Not used by immediate commands"
                        enum = [ACCEPTED, REJECTED]
                }
                {
                        name =  ackMsg
                        description = "Acknowledgement string explaining why a command is REJECTED. This string will be empty if the command is ACCEPTED. Not used by immediate commands"
                        type = string
                }
                {
                        name = comp 
                        description = "Status of completion (only valid when the state.cmd is no longer BUSY),  SUCCESS | FAILED | INTERRUPTED | REJECTED.  The REJECTED status only applies to immediate type commands, since they do not send an acknowledgement, yet the command may still be invalid and therefore rejected."
                        enum = [SUCCESS, FAILED, INTERRUPTED, REJECTED]
                }
                {
                        name =  compMsg
                        description = "Completion string explaining why a command is FAILED, INTERRUPTED or REJECTED. This string will be empty if the command is INPROGRESS or SUCCESS."
                        type = string
                }
             ]
        }




        {
            name = writeReadout
            description = "Tells IMAGER/IFS HCD when a readout has been written to the readout disk so it may start the next exposure"
            attributes = [

                {
                        name = ifs
                        description = "writing IFS readout"
                        type = boolean
                }
                {
                        name = imager
                        description = "writing IMAGER readout"
                        type = boolean
                }

            ]

        }

        {
            name = writeScience
            description = "Returns status when a raw science frame has been written to the readout disk"
            attributes = [

                {
                        name = ifs
                        description = "writing IFS raw science"
                        type = boolean
                }
                {
                        name = imager
                        description = "writing IMAGER raw science"
                        type = boolean
                }

            ]
        }

        {
            name = writeReduced
            description = "Returns status when a reduced science frame has been written to the reduced disk"
            attributes = [

                {
                        name = ifs
                        description = "writing IFS reduced science"
                        type = boolean
                }
                {
                        name = imager
                        description = "writing IMAGER reduced science"
                        type = boolean
                }

            ]
        }
    ]
}
    
